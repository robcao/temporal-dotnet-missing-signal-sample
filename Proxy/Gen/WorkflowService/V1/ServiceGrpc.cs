// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: temporal/api/workflowservice/v1/service.proto
// </auto-generated>
// Original file comments:
// The MIT License
//
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Temporalio.Api.WorkflowService.V1 {
  /// <summary>
  /// WorkflowService API defines how Temporal SDKs and other clients interact with the Temporal server
  /// to create and interact with workflows and activities.
  ///
  /// Users are expected to call `StartWorkflowExecution` to create a new workflow execution.
  ///
  /// To drive workflows, a worker using a Temporal SDK must exist which regularly polls for workflow
  /// and activity tasks from the service. For each workflow task, the sdk must process the
  /// (incremental or complete) event history and respond back with any newly generated commands.
  ///
  /// For each activity task, the worker is expected to execute the user's code which implements that
  /// activity, responding with completion or failure.
  /// </summary>
  public static partial class WorkflowService
  {
    static readonly string __ServiceName = "temporal.api.workflowservice.v1.WorkflowService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RegisterNamespaceRequest> __Marshaller_temporal_api_workflowservice_v1_RegisterNamespaceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RegisterNamespaceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RegisterNamespaceResponse> __Marshaller_temporal_api_workflowservice_v1_RegisterNamespaceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RegisterNamespaceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DescribeNamespaceRequest> __Marshaller_temporal_api_workflowservice_v1_DescribeNamespaceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DescribeNamespaceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DescribeNamespaceResponse> __Marshaller_temporal_api_workflowservice_v1_DescribeNamespaceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DescribeNamespaceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListNamespacesRequest> __Marshaller_temporal_api_workflowservice_v1_ListNamespacesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListNamespacesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListNamespacesResponse> __Marshaller_temporal_api_workflowservice_v1_ListNamespacesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListNamespacesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateNamespaceRequest> __Marshaller_temporal_api_workflowservice_v1_UpdateNamespaceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateNamespaceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateNamespaceResponse> __Marshaller_temporal_api_workflowservice_v1_UpdateNamespaceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateNamespaceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DeprecateNamespaceRequest> __Marshaller_temporal_api_workflowservice_v1_DeprecateNamespaceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DeprecateNamespaceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DeprecateNamespaceResponse> __Marshaller_temporal_api_workflowservice_v1_DeprecateNamespaceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DeprecateNamespaceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.StartWorkflowExecutionRequest> __Marshaller_temporal_api_workflowservice_v1_StartWorkflowExecutionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.StartWorkflowExecutionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.StartWorkflowExecutionResponse> __Marshaller_temporal_api_workflowservice_v1_StartWorkflowExecutionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.StartWorkflowExecutionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ExecuteMultiOperationRequest> __Marshaller_temporal_api_workflowservice_v1_ExecuteMultiOperationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ExecuteMultiOperationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ExecuteMultiOperationResponse> __Marshaller_temporal_api_workflowservice_v1_ExecuteMultiOperationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ExecuteMultiOperationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryRequest> __Marshaller_temporal_api_workflowservice_v1_GetWorkflowExecutionHistoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryResponse> __Marshaller_temporal_api_workflowservice_v1_GetWorkflowExecutionHistoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryReverseRequest> __Marshaller_temporal_api_workflowservice_v1_GetWorkflowExecutionHistoryReverseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryReverseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryReverseResponse> __Marshaller_temporal_api_workflowservice_v1_GetWorkflowExecutionHistoryReverseResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryReverseResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.PollWorkflowTaskQueueRequest> __Marshaller_temporal_api_workflowservice_v1_PollWorkflowTaskQueueRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.PollWorkflowTaskQueueRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.PollWorkflowTaskQueueResponse> __Marshaller_temporal_api_workflowservice_v1_PollWorkflowTaskQueueResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.PollWorkflowTaskQueueResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskCompletedRequest> __Marshaller_temporal_api_workflowservice_v1_RespondWorkflowTaskCompletedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskCompletedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskCompletedResponse> __Marshaller_temporal_api_workflowservice_v1_RespondWorkflowTaskCompletedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskCompletedResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskFailedRequest> __Marshaller_temporal_api_workflowservice_v1_RespondWorkflowTaskFailedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskFailedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskFailedResponse> __Marshaller_temporal_api_workflowservice_v1_RespondWorkflowTaskFailedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskFailedResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.PollActivityTaskQueueRequest> __Marshaller_temporal_api_workflowservice_v1_PollActivityTaskQueueRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.PollActivityTaskQueueRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.PollActivityTaskQueueResponse> __Marshaller_temporal_api_workflowservice_v1_PollActivityTaskQueueResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.PollActivityTaskQueueResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatRequest> __Marshaller_temporal_api_workflowservice_v1_RecordActivityTaskHeartbeatRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatResponse> __Marshaller_temporal_api_workflowservice_v1_RecordActivityTaskHeartbeatResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatByIdRequest> __Marshaller_temporal_api_workflowservice_v1_RecordActivityTaskHeartbeatByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatByIdResponse> __Marshaller_temporal_api_workflowservice_v1_RecordActivityTaskHeartbeatByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatByIdResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedRequest> __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCompletedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedResponse> __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCompletedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedByIdRequest> __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCompletedByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedByIdResponse> __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCompletedByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedByIdResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedRequest> __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskFailedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedResponse> __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskFailedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedByIdRequest> __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskFailedByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedByIdResponse> __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskFailedByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedByIdResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledRequest> __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCanceledRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledResponse> __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCanceledResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledByIdRequest> __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCanceledByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledByIdResponse> __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCanceledByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledByIdResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RequestCancelWorkflowExecutionRequest> __Marshaller_temporal_api_workflowservice_v1_RequestCancelWorkflowExecutionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RequestCancelWorkflowExecutionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RequestCancelWorkflowExecutionResponse> __Marshaller_temporal_api_workflowservice_v1_RequestCancelWorkflowExecutionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RequestCancelWorkflowExecutionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.SignalWorkflowExecutionRequest> __Marshaller_temporal_api_workflowservice_v1_SignalWorkflowExecutionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.SignalWorkflowExecutionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.SignalWorkflowExecutionResponse> __Marshaller_temporal_api_workflowservice_v1_SignalWorkflowExecutionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.SignalWorkflowExecutionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.SignalWithStartWorkflowExecutionRequest> __Marshaller_temporal_api_workflowservice_v1_SignalWithStartWorkflowExecutionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.SignalWithStartWorkflowExecutionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.SignalWithStartWorkflowExecutionResponse> __Marshaller_temporal_api_workflowservice_v1_SignalWithStartWorkflowExecutionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.SignalWithStartWorkflowExecutionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ResetWorkflowExecutionRequest> __Marshaller_temporal_api_workflowservice_v1_ResetWorkflowExecutionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ResetWorkflowExecutionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ResetWorkflowExecutionResponse> __Marshaller_temporal_api_workflowservice_v1_ResetWorkflowExecutionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ResetWorkflowExecutionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.TerminateWorkflowExecutionRequest> __Marshaller_temporal_api_workflowservice_v1_TerminateWorkflowExecutionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.TerminateWorkflowExecutionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.TerminateWorkflowExecutionResponse> __Marshaller_temporal_api_workflowservice_v1_TerminateWorkflowExecutionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.TerminateWorkflowExecutionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DeleteWorkflowExecutionRequest> __Marshaller_temporal_api_workflowservice_v1_DeleteWorkflowExecutionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DeleteWorkflowExecutionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DeleteWorkflowExecutionResponse> __Marshaller_temporal_api_workflowservice_v1_DeleteWorkflowExecutionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DeleteWorkflowExecutionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListOpenWorkflowExecutionsRequest> __Marshaller_temporal_api_workflowservice_v1_ListOpenWorkflowExecutionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListOpenWorkflowExecutionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListOpenWorkflowExecutionsResponse> __Marshaller_temporal_api_workflowservice_v1_ListOpenWorkflowExecutionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListOpenWorkflowExecutionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListClosedWorkflowExecutionsRequest> __Marshaller_temporal_api_workflowservice_v1_ListClosedWorkflowExecutionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListClosedWorkflowExecutionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListClosedWorkflowExecutionsResponse> __Marshaller_temporal_api_workflowservice_v1_ListClosedWorkflowExecutionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListClosedWorkflowExecutionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListWorkflowExecutionsRequest> __Marshaller_temporal_api_workflowservice_v1_ListWorkflowExecutionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListWorkflowExecutionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListWorkflowExecutionsResponse> __Marshaller_temporal_api_workflowservice_v1_ListWorkflowExecutionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListWorkflowExecutionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListArchivedWorkflowExecutionsRequest> __Marshaller_temporal_api_workflowservice_v1_ListArchivedWorkflowExecutionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListArchivedWorkflowExecutionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListArchivedWorkflowExecutionsResponse> __Marshaller_temporal_api_workflowservice_v1_ListArchivedWorkflowExecutionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListArchivedWorkflowExecutionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ScanWorkflowExecutionsRequest> __Marshaller_temporal_api_workflowservice_v1_ScanWorkflowExecutionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ScanWorkflowExecutionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ScanWorkflowExecutionsResponse> __Marshaller_temporal_api_workflowservice_v1_ScanWorkflowExecutionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ScanWorkflowExecutionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.CountWorkflowExecutionsRequest> __Marshaller_temporal_api_workflowservice_v1_CountWorkflowExecutionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.CountWorkflowExecutionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.CountWorkflowExecutionsResponse> __Marshaller_temporal_api_workflowservice_v1_CountWorkflowExecutionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.CountWorkflowExecutionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetSearchAttributesRequest> __Marshaller_temporal_api_workflowservice_v1_GetSearchAttributesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetSearchAttributesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetSearchAttributesResponse> __Marshaller_temporal_api_workflowservice_v1_GetSearchAttributesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetSearchAttributesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondQueryTaskCompletedRequest> __Marshaller_temporal_api_workflowservice_v1_RespondQueryTaskCompletedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondQueryTaskCompletedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondQueryTaskCompletedResponse> __Marshaller_temporal_api_workflowservice_v1_RespondQueryTaskCompletedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondQueryTaskCompletedResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ResetStickyTaskQueueRequest> __Marshaller_temporal_api_workflowservice_v1_ResetStickyTaskQueueRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ResetStickyTaskQueueRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ResetStickyTaskQueueResponse> __Marshaller_temporal_api_workflowservice_v1_ResetStickyTaskQueueResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ResetStickyTaskQueueResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ShutdownWorkerRequest> __Marshaller_temporal_api_workflowservice_v1_ShutdownWorkerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ShutdownWorkerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ShutdownWorkerResponse> __Marshaller_temporal_api_workflowservice_v1_ShutdownWorkerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ShutdownWorkerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.QueryWorkflowRequest> __Marshaller_temporal_api_workflowservice_v1_QueryWorkflowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.QueryWorkflowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.QueryWorkflowResponse> __Marshaller_temporal_api_workflowservice_v1_QueryWorkflowResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.QueryWorkflowResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DescribeWorkflowExecutionRequest> __Marshaller_temporal_api_workflowservice_v1_DescribeWorkflowExecutionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DescribeWorkflowExecutionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DescribeWorkflowExecutionResponse> __Marshaller_temporal_api_workflowservice_v1_DescribeWorkflowExecutionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DescribeWorkflowExecutionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DescribeTaskQueueRequest> __Marshaller_temporal_api_workflowservice_v1_DescribeTaskQueueRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DescribeTaskQueueRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DescribeTaskQueueResponse> __Marshaller_temporal_api_workflowservice_v1_DescribeTaskQueueResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DescribeTaskQueueResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetClusterInfoRequest> __Marshaller_temporal_api_workflowservice_v1_GetClusterInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetClusterInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetClusterInfoResponse> __Marshaller_temporal_api_workflowservice_v1_GetClusterInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetClusterInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetSystemInfoRequest> __Marshaller_temporal_api_workflowservice_v1_GetSystemInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetSystemInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetSystemInfoResponse> __Marshaller_temporal_api_workflowservice_v1_GetSystemInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetSystemInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListTaskQueuePartitionsRequest> __Marshaller_temporal_api_workflowservice_v1_ListTaskQueuePartitionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListTaskQueuePartitionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListTaskQueuePartitionsResponse> __Marshaller_temporal_api_workflowservice_v1_ListTaskQueuePartitionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListTaskQueuePartitionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.CreateScheduleRequest> __Marshaller_temporal_api_workflowservice_v1_CreateScheduleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.CreateScheduleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.CreateScheduleResponse> __Marshaller_temporal_api_workflowservice_v1_CreateScheduleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.CreateScheduleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DescribeScheduleRequest> __Marshaller_temporal_api_workflowservice_v1_DescribeScheduleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DescribeScheduleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DescribeScheduleResponse> __Marshaller_temporal_api_workflowservice_v1_DescribeScheduleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DescribeScheduleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateScheduleRequest> __Marshaller_temporal_api_workflowservice_v1_UpdateScheduleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateScheduleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateScheduleResponse> __Marshaller_temporal_api_workflowservice_v1_UpdateScheduleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateScheduleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.PatchScheduleRequest> __Marshaller_temporal_api_workflowservice_v1_PatchScheduleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.PatchScheduleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.PatchScheduleResponse> __Marshaller_temporal_api_workflowservice_v1_PatchScheduleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.PatchScheduleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListScheduleMatchingTimesRequest> __Marshaller_temporal_api_workflowservice_v1_ListScheduleMatchingTimesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListScheduleMatchingTimesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListScheduleMatchingTimesResponse> __Marshaller_temporal_api_workflowservice_v1_ListScheduleMatchingTimesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListScheduleMatchingTimesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DeleteScheduleRequest> __Marshaller_temporal_api_workflowservice_v1_DeleteScheduleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DeleteScheduleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DeleteScheduleResponse> __Marshaller_temporal_api_workflowservice_v1_DeleteScheduleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DeleteScheduleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListSchedulesRequest> __Marshaller_temporal_api_workflowservice_v1_ListSchedulesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListSchedulesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListSchedulesResponse> __Marshaller_temporal_api_workflowservice_v1_ListSchedulesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListSchedulesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateWorkerBuildIdCompatibilityRequest> __Marshaller_temporal_api_workflowservice_v1_UpdateWorkerBuildIdCompatibilityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateWorkerBuildIdCompatibilityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateWorkerBuildIdCompatibilityResponse> __Marshaller_temporal_api_workflowservice_v1_UpdateWorkerBuildIdCompatibilityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateWorkerBuildIdCompatibilityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetWorkerBuildIdCompatibilityRequest> __Marshaller_temporal_api_workflowservice_v1_GetWorkerBuildIdCompatibilityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetWorkerBuildIdCompatibilityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetWorkerBuildIdCompatibilityResponse> __Marshaller_temporal_api_workflowservice_v1_GetWorkerBuildIdCompatibilityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetWorkerBuildIdCompatibilityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateWorkerVersioningRulesRequest> __Marshaller_temporal_api_workflowservice_v1_UpdateWorkerVersioningRulesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateWorkerVersioningRulesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateWorkerVersioningRulesResponse> __Marshaller_temporal_api_workflowservice_v1_UpdateWorkerVersioningRulesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateWorkerVersioningRulesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetWorkerVersioningRulesRequest> __Marshaller_temporal_api_workflowservice_v1_GetWorkerVersioningRulesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetWorkerVersioningRulesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetWorkerVersioningRulesResponse> __Marshaller_temporal_api_workflowservice_v1_GetWorkerVersioningRulesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetWorkerVersioningRulesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetWorkerTaskReachabilityRequest> __Marshaller_temporal_api_workflowservice_v1_GetWorkerTaskReachabilityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetWorkerTaskReachabilityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetWorkerTaskReachabilityResponse> __Marshaller_temporal_api_workflowservice_v1_GetWorkerTaskReachabilityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetWorkerTaskReachabilityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DescribeDeploymentRequest> __Marshaller_temporal_api_workflowservice_v1_DescribeDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DescribeDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DescribeDeploymentResponse> __Marshaller_temporal_api_workflowservice_v1_DescribeDeploymentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DescribeDeploymentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListDeploymentsRequest> __Marshaller_temporal_api_workflowservice_v1_ListDeploymentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListDeploymentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListDeploymentsResponse> __Marshaller_temporal_api_workflowservice_v1_ListDeploymentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListDeploymentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetDeploymentReachabilityRequest> __Marshaller_temporal_api_workflowservice_v1_GetDeploymentReachabilityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetDeploymentReachabilityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetDeploymentReachabilityResponse> __Marshaller_temporal_api_workflowservice_v1_GetDeploymentReachabilityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetDeploymentReachabilityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetCurrentDeploymentRequest> __Marshaller_temporal_api_workflowservice_v1_GetCurrentDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetCurrentDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.GetCurrentDeploymentResponse> __Marshaller_temporal_api_workflowservice_v1_GetCurrentDeploymentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.GetCurrentDeploymentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.SetCurrentDeploymentRequest> __Marshaller_temporal_api_workflowservice_v1_SetCurrentDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.SetCurrentDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.SetCurrentDeploymentResponse> __Marshaller_temporal_api_workflowservice_v1_SetCurrentDeploymentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.SetCurrentDeploymentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionRequest> __Marshaller_temporal_api_workflowservice_v1_UpdateWorkflowExecutionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionResponse> __Marshaller_temporal_api_workflowservice_v1_UpdateWorkflowExecutionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.PollWorkflowExecutionUpdateRequest> __Marshaller_temporal_api_workflowservice_v1_PollWorkflowExecutionUpdateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.PollWorkflowExecutionUpdateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.PollWorkflowExecutionUpdateResponse> __Marshaller_temporal_api_workflowservice_v1_PollWorkflowExecutionUpdateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.PollWorkflowExecutionUpdateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.StartBatchOperationRequest> __Marshaller_temporal_api_workflowservice_v1_StartBatchOperationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.StartBatchOperationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.StartBatchOperationResponse> __Marshaller_temporal_api_workflowservice_v1_StartBatchOperationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.StartBatchOperationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.StopBatchOperationRequest> __Marshaller_temporal_api_workflowservice_v1_StopBatchOperationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.StopBatchOperationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.StopBatchOperationResponse> __Marshaller_temporal_api_workflowservice_v1_StopBatchOperationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.StopBatchOperationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DescribeBatchOperationRequest> __Marshaller_temporal_api_workflowservice_v1_DescribeBatchOperationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DescribeBatchOperationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.DescribeBatchOperationResponse> __Marshaller_temporal_api_workflowservice_v1_DescribeBatchOperationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.DescribeBatchOperationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListBatchOperationsRequest> __Marshaller_temporal_api_workflowservice_v1_ListBatchOperationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListBatchOperationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ListBatchOperationsResponse> __Marshaller_temporal_api_workflowservice_v1_ListBatchOperationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ListBatchOperationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.PollNexusTaskQueueRequest> __Marshaller_temporal_api_workflowservice_v1_PollNexusTaskQueueRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.PollNexusTaskQueueRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.PollNexusTaskQueueResponse> __Marshaller_temporal_api_workflowservice_v1_PollNexusTaskQueueResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.PollNexusTaskQueueResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskCompletedRequest> __Marshaller_temporal_api_workflowservice_v1_RespondNexusTaskCompletedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskCompletedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskCompletedResponse> __Marshaller_temporal_api_workflowservice_v1_RespondNexusTaskCompletedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskCompletedResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskFailedRequest> __Marshaller_temporal_api_workflowservice_v1_RespondNexusTaskFailedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskFailedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskFailedResponse> __Marshaller_temporal_api_workflowservice_v1_RespondNexusTaskFailedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskFailedResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateActivityOptionsByIdRequest> __Marshaller_temporal_api_workflowservice_v1_UpdateActivityOptionsByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateActivityOptionsByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateActivityOptionsByIdResponse> __Marshaller_temporal_api_workflowservice_v1_UpdateActivityOptionsByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateActivityOptionsByIdResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionOptionsRequest> __Marshaller_temporal_api_workflowservice_v1_UpdateWorkflowExecutionOptionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionOptionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionOptionsResponse> __Marshaller_temporal_api_workflowservice_v1_UpdateWorkflowExecutionOptionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionOptionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.PauseActivityByIdRequest> __Marshaller_temporal_api_workflowservice_v1_PauseActivityByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.PauseActivityByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.PauseActivityByIdResponse> __Marshaller_temporal_api_workflowservice_v1_PauseActivityByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.PauseActivityByIdResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UnpauseActivityByIdRequest> __Marshaller_temporal_api_workflowservice_v1_UnpauseActivityByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UnpauseActivityByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.UnpauseActivityByIdResponse> __Marshaller_temporal_api_workflowservice_v1_UnpauseActivityByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.UnpauseActivityByIdResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ResetActivityByIdRequest> __Marshaller_temporal_api_workflowservice_v1_ResetActivityByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ResetActivityByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Temporalio.Api.WorkflowService.V1.ResetActivityByIdResponse> __Marshaller_temporal_api_workflowservice_v1_ResetActivityByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Temporalio.Api.WorkflowService.V1.ResetActivityByIdResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RegisterNamespaceRequest, global::Temporalio.Api.WorkflowService.V1.RegisterNamespaceResponse> __Method_RegisterNamespace = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RegisterNamespaceRequest, global::Temporalio.Api.WorkflowService.V1.RegisterNamespaceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterNamespace",
        __Marshaller_temporal_api_workflowservice_v1_RegisterNamespaceRequest,
        __Marshaller_temporal_api_workflowservice_v1_RegisterNamespaceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.DescribeNamespaceRequest, global::Temporalio.Api.WorkflowService.V1.DescribeNamespaceResponse> __Method_DescribeNamespace = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.DescribeNamespaceRequest, global::Temporalio.Api.WorkflowService.V1.DescribeNamespaceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DescribeNamespace",
        __Marshaller_temporal_api_workflowservice_v1_DescribeNamespaceRequest,
        __Marshaller_temporal_api_workflowservice_v1_DescribeNamespaceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListNamespacesRequest, global::Temporalio.Api.WorkflowService.V1.ListNamespacesResponse> __Method_ListNamespaces = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListNamespacesRequest, global::Temporalio.Api.WorkflowService.V1.ListNamespacesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNamespaces",
        __Marshaller_temporal_api_workflowservice_v1_ListNamespacesRequest,
        __Marshaller_temporal_api_workflowservice_v1_ListNamespacesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateNamespaceRequest, global::Temporalio.Api.WorkflowService.V1.UpdateNamespaceResponse> __Method_UpdateNamespace = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateNamespaceRequest, global::Temporalio.Api.WorkflowService.V1.UpdateNamespaceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNamespace",
        __Marshaller_temporal_api_workflowservice_v1_UpdateNamespaceRequest,
        __Marshaller_temporal_api_workflowservice_v1_UpdateNamespaceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.DeprecateNamespaceRequest, global::Temporalio.Api.WorkflowService.V1.DeprecateNamespaceResponse> __Method_DeprecateNamespace = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.DeprecateNamespaceRequest, global::Temporalio.Api.WorkflowService.V1.DeprecateNamespaceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeprecateNamespace",
        __Marshaller_temporal_api_workflowservice_v1_DeprecateNamespaceRequest,
        __Marshaller_temporal_api_workflowservice_v1_DeprecateNamespaceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.StartWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.StartWorkflowExecutionResponse> __Method_StartWorkflowExecution = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.StartWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.StartWorkflowExecutionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartWorkflowExecution",
        __Marshaller_temporal_api_workflowservice_v1_StartWorkflowExecutionRequest,
        __Marshaller_temporal_api_workflowservice_v1_StartWorkflowExecutionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ExecuteMultiOperationRequest, global::Temporalio.Api.WorkflowService.V1.ExecuteMultiOperationResponse> __Method_ExecuteMultiOperation = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ExecuteMultiOperationRequest, global::Temporalio.Api.WorkflowService.V1.ExecuteMultiOperationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExecuteMultiOperation",
        __Marshaller_temporal_api_workflowservice_v1_ExecuteMultiOperationRequest,
        __Marshaller_temporal_api_workflowservice_v1_ExecuteMultiOperationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryResponse> __Method_GetWorkflowExecutionHistory = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkflowExecutionHistory",
        __Marshaller_temporal_api_workflowservice_v1_GetWorkflowExecutionHistoryRequest,
        __Marshaller_temporal_api_workflowservice_v1_GetWorkflowExecutionHistoryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryReverseRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryReverseResponse> __Method_GetWorkflowExecutionHistoryReverse = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryReverseRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryReverseResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkflowExecutionHistoryReverse",
        __Marshaller_temporal_api_workflowservice_v1_GetWorkflowExecutionHistoryReverseRequest,
        __Marshaller_temporal_api_workflowservice_v1_GetWorkflowExecutionHistoryReverseResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.PollWorkflowTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.PollWorkflowTaskQueueResponse> __Method_PollWorkflowTaskQueue = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.PollWorkflowTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.PollWorkflowTaskQueueResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PollWorkflowTaskQueue",
        __Marshaller_temporal_api_workflowservice_v1_PollWorkflowTaskQueueRequest,
        __Marshaller_temporal_api_workflowservice_v1_PollWorkflowTaskQueueResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskCompletedRequest, global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskCompletedResponse> __Method_RespondWorkflowTaskCompleted = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskCompletedRequest, global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskCompletedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RespondWorkflowTaskCompleted",
        __Marshaller_temporal_api_workflowservice_v1_RespondWorkflowTaskCompletedRequest,
        __Marshaller_temporal_api_workflowservice_v1_RespondWorkflowTaskCompletedResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskFailedRequest, global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskFailedResponse> __Method_RespondWorkflowTaskFailed = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskFailedRequest, global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskFailedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RespondWorkflowTaskFailed",
        __Marshaller_temporal_api_workflowservice_v1_RespondWorkflowTaskFailedRequest,
        __Marshaller_temporal_api_workflowservice_v1_RespondWorkflowTaskFailedResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.PollActivityTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.PollActivityTaskQueueResponse> __Method_PollActivityTaskQueue = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.PollActivityTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.PollActivityTaskQueueResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PollActivityTaskQueue",
        __Marshaller_temporal_api_workflowservice_v1_PollActivityTaskQueueRequest,
        __Marshaller_temporal_api_workflowservice_v1_PollActivityTaskQueueResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatRequest, global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatResponse> __Method_RecordActivityTaskHeartbeat = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatRequest, global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RecordActivityTaskHeartbeat",
        __Marshaller_temporal_api_workflowservice_v1_RecordActivityTaskHeartbeatRequest,
        __Marshaller_temporal_api_workflowservice_v1_RecordActivityTaskHeartbeatResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatByIdRequest, global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatByIdResponse> __Method_RecordActivityTaskHeartbeatById = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatByIdRequest, global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RecordActivityTaskHeartbeatById",
        __Marshaller_temporal_api_workflowservice_v1_RecordActivityTaskHeartbeatByIdRequest,
        __Marshaller_temporal_api_workflowservice_v1_RecordActivityTaskHeartbeatByIdResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedResponse> __Method_RespondActivityTaskCompleted = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RespondActivityTaskCompleted",
        __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCompletedRequest,
        __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCompletedResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedByIdRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedByIdResponse> __Method_RespondActivityTaskCompletedById = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedByIdRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RespondActivityTaskCompletedById",
        __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCompletedByIdRequest,
        __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCompletedByIdResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedResponse> __Method_RespondActivityTaskFailed = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RespondActivityTaskFailed",
        __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskFailedRequest,
        __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskFailedResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedByIdRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedByIdResponse> __Method_RespondActivityTaskFailedById = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedByIdRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RespondActivityTaskFailedById",
        __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskFailedByIdRequest,
        __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskFailedByIdResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledResponse> __Method_RespondActivityTaskCanceled = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RespondActivityTaskCanceled",
        __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCanceledRequest,
        __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCanceledResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledByIdRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledByIdResponse> __Method_RespondActivityTaskCanceledById = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledByIdRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RespondActivityTaskCanceledById",
        __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCanceledByIdRequest,
        __Marshaller_temporal_api_workflowservice_v1_RespondActivityTaskCanceledByIdResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RequestCancelWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.RequestCancelWorkflowExecutionResponse> __Method_RequestCancelWorkflowExecution = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RequestCancelWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.RequestCancelWorkflowExecutionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RequestCancelWorkflowExecution",
        __Marshaller_temporal_api_workflowservice_v1_RequestCancelWorkflowExecutionRequest,
        __Marshaller_temporal_api_workflowservice_v1_RequestCancelWorkflowExecutionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.SignalWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.SignalWorkflowExecutionResponse> __Method_SignalWorkflowExecution = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.SignalWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.SignalWorkflowExecutionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignalWorkflowExecution",
        __Marshaller_temporal_api_workflowservice_v1_SignalWorkflowExecutionRequest,
        __Marshaller_temporal_api_workflowservice_v1_SignalWorkflowExecutionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.SignalWithStartWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.SignalWithStartWorkflowExecutionResponse> __Method_SignalWithStartWorkflowExecution = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.SignalWithStartWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.SignalWithStartWorkflowExecutionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignalWithStartWorkflowExecution",
        __Marshaller_temporal_api_workflowservice_v1_SignalWithStartWorkflowExecutionRequest,
        __Marshaller_temporal_api_workflowservice_v1_SignalWithStartWorkflowExecutionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ResetWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.ResetWorkflowExecutionResponse> __Method_ResetWorkflowExecution = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ResetWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.ResetWorkflowExecutionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetWorkflowExecution",
        __Marshaller_temporal_api_workflowservice_v1_ResetWorkflowExecutionRequest,
        __Marshaller_temporal_api_workflowservice_v1_ResetWorkflowExecutionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.TerminateWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.TerminateWorkflowExecutionResponse> __Method_TerminateWorkflowExecution = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.TerminateWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.TerminateWorkflowExecutionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TerminateWorkflowExecution",
        __Marshaller_temporal_api_workflowservice_v1_TerminateWorkflowExecutionRequest,
        __Marshaller_temporal_api_workflowservice_v1_TerminateWorkflowExecutionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.DeleteWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.DeleteWorkflowExecutionResponse> __Method_DeleteWorkflowExecution = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.DeleteWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.DeleteWorkflowExecutionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteWorkflowExecution",
        __Marshaller_temporal_api_workflowservice_v1_DeleteWorkflowExecutionRequest,
        __Marshaller_temporal_api_workflowservice_v1_DeleteWorkflowExecutionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListOpenWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ListOpenWorkflowExecutionsResponse> __Method_ListOpenWorkflowExecutions = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListOpenWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ListOpenWorkflowExecutionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOpenWorkflowExecutions",
        __Marshaller_temporal_api_workflowservice_v1_ListOpenWorkflowExecutionsRequest,
        __Marshaller_temporal_api_workflowservice_v1_ListOpenWorkflowExecutionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListClosedWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ListClosedWorkflowExecutionsResponse> __Method_ListClosedWorkflowExecutions = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListClosedWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ListClosedWorkflowExecutionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListClosedWorkflowExecutions",
        __Marshaller_temporal_api_workflowservice_v1_ListClosedWorkflowExecutionsRequest,
        __Marshaller_temporal_api_workflowservice_v1_ListClosedWorkflowExecutionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ListWorkflowExecutionsResponse> __Method_ListWorkflowExecutions = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ListWorkflowExecutionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListWorkflowExecutions",
        __Marshaller_temporal_api_workflowservice_v1_ListWorkflowExecutionsRequest,
        __Marshaller_temporal_api_workflowservice_v1_ListWorkflowExecutionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListArchivedWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ListArchivedWorkflowExecutionsResponse> __Method_ListArchivedWorkflowExecutions = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListArchivedWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ListArchivedWorkflowExecutionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListArchivedWorkflowExecutions",
        __Marshaller_temporal_api_workflowservice_v1_ListArchivedWorkflowExecutionsRequest,
        __Marshaller_temporal_api_workflowservice_v1_ListArchivedWorkflowExecutionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ScanWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ScanWorkflowExecutionsResponse> __Method_ScanWorkflowExecutions = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ScanWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ScanWorkflowExecutionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ScanWorkflowExecutions",
        __Marshaller_temporal_api_workflowservice_v1_ScanWorkflowExecutionsRequest,
        __Marshaller_temporal_api_workflowservice_v1_ScanWorkflowExecutionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.CountWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.CountWorkflowExecutionsResponse> __Method_CountWorkflowExecutions = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.CountWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.CountWorkflowExecutionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CountWorkflowExecutions",
        __Marshaller_temporal_api_workflowservice_v1_CountWorkflowExecutionsRequest,
        __Marshaller_temporal_api_workflowservice_v1_CountWorkflowExecutionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetSearchAttributesRequest, global::Temporalio.Api.WorkflowService.V1.GetSearchAttributesResponse> __Method_GetSearchAttributes = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetSearchAttributesRequest, global::Temporalio.Api.WorkflowService.V1.GetSearchAttributesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSearchAttributes",
        __Marshaller_temporal_api_workflowservice_v1_GetSearchAttributesRequest,
        __Marshaller_temporal_api_workflowservice_v1_GetSearchAttributesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondQueryTaskCompletedRequest, global::Temporalio.Api.WorkflowService.V1.RespondQueryTaskCompletedResponse> __Method_RespondQueryTaskCompleted = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondQueryTaskCompletedRequest, global::Temporalio.Api.WorkflowService.V1.RespondQueryTaskCompletedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RespondQueryTaskCompleted",
        __Marshaller_temporal_api_workflowservice_v1_RespondQueryTaskCompletedRequest,
        __Marshaller_temporal_api_workflowservice_v1_RespondQueryTaskCompletedResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ResetStickyTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.ResetStickyTaskQueueResponse> __Method_ResetStickyTaskQueue = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ResetStickyTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.ResetStickyTaskQueueResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetStickyTaskQueue",
        __Marshaller_temporal_api_workflowservice_v1_ResetStickyTaskQueueRequest,
        __Marshaller_temporal_api_workflowservice_v1_ResetStickyTaskQueueResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ShutdownWorkerRequest, global::Temporalio.Api.WorkflowService.V1.ShutdownWorkerResponse> __Method_ShutdownWorker = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ShutdownWorkerRequest, global::Temporalio.Api.WorkflowService.V1.ShutdownWorkerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ShutdownWorker",
        __Marshaller_temporal_api_workflowservice_v1_ShutdownWorkerRequest,
        __Marshaller_temporal_api_workflowservice_v1_ShutdownWorkerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.QueryWorkflowRequest, global::Temporalio.Api.WorkflowService.V1.QueryWorkflowResponse> __Method_QueryWorkflow = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.QueryWorkflowRequest, global::Temporalio.Api.WorkflowService.V1.QueryWorkflowResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryWorkflow",
        __Marshaller_temporal_api_workflowservice_v1_QueryWorkflowRequest,
        __Marshaller_temporal_api_workflowservice_v1_QueryWorkflowResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.DescribeWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.DescribeWorkflowExecutionResponse> __Method_DescribeWorkflowExecution = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.DescribeWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.DescribeWorkflowExecutionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DescribeWorkflowExecution",
        __Marshaller_temporal_api_workflowservice_v1_DescribeWorkflowExecutionRequest,
        __Marshaller_temporal_api_workflowservice_v1_DescribeWorkflowExecutionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.DescribeTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.DescribeTaskQueueResponse> __Method_DescribeTaskQueue = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.DescribeTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.DescribeTaskQueueResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DescribeTaskQueue",
        __Marshaller_temporal_api_workflowservice_v1_DescribeTaskQueueRequest,
        __Marshaller_temporal_api_workflowservice_v1_DescribeTaskQueueResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetClusterInfoRequest, global::Temporalio.Api.WorkflowService.V1.GetClusterInfoResponse> __Method_GetClusterInfo = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetClusterInfoRequest, global::Temporalio.Api.WorkflowService.V1.GetClusterInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetClusterInfo",
        __Marshaller_temporal_api_workflowservice_v1_GetClusterInfoRequest,
        __Marshaller_temporal_api_workflowservice_v1_GetClusterInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetSystemInfoRequest, global::Temporalio.Api.WorkflowService.V1.GetSystemInfoResponse> __Method_GetSystemInfo = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetSystemInfoRequest, global::Temporalio.Api.WorkflowService.V1.GetSystemInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSystemInfo",
        __Marshaller_temporal_api_workflowservice_v1_GetSystemInfoRequest,
        __Marshaller_temporal_api_workflowservice_v1_GetSystemInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListTaskQueuePartitionsRequest, global::Temporalio.Api.WorkflowService.V1.ListTaskQueuePartitionsResponse> __Method_ListTaskQueuePartitions = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListTaskQueuePartitionsRequest, global::Temporalio.Api.WorkflowService.V1.ListTaskQueuePartitionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTaskQueuePartitions",
        __Marshaller_temporal_api_workflowservice_v1_ListTaskQueuePartitionsRequest,
        __Marshaller_temporal_api_workflowservice_v1_ListTaskQueuePartitionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.CreateScheduleRequest, global::Temporalio.Api.WorkflowService.V1.CreateScheduleResponse> __Method_CreateSchedule = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.CreateScheduleRequest, global::Temporalio.Api.WorkflowService.V1.CreateScheduleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSchedule",
        __Marshaller_temporal_api_workflowservice_v1_CreateScheduleRequest,
        __Marshaller_temporal_api_workflowservice_v1_CreateScheduleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.DescribeScheduleRequest, global::Temporalio.Api.WorkflowService.V1.DescribeScheduleResponse> __Method_DescribeSchedule = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.DescribeScheduleRequest, global::Temporalio.Api.WorkflowService.V1.DescribeScheduleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DescribeSchedule",
        __Marshaller_temporal_api_workflowservice_v1_DescribeScheduleRequest,
        __Marshaller_temporal_api_workflowservice_v1_DescribeScheduleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateScheduleRequest, global::Temporalio.Api.WorkflowService.V1.UpdateScheduleResponse> __Method_UpdateSchedule = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateScheduleRequest, global::Temporalio.Api.WorkflowService.V1.UpdateScheduleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSchedule",
        __Marshaller_temporal_api_workflowservice_v1_UpdateScheduleRequest,
        __Marshaller_temporal_api_workflowservice_v1_UpdateScheduleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.PatchScheduleRequest, global::Temporalio.Api.WorkflowService.V1.PatchScheduleResponse> __Method_PatchSchedule = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.PatchScheduleRequest, global::Temporalio.Api.WorkflowService.V1.PatchScheduleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PatchSchedule",
        __Marshaller_temporal_api_workflowservice_v1_PatchScheduleRequest,
        __Marshaller_temporal_api_workflowservice_v1_PatchScheduleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListScheduleMatchingTimesRequest, global::Temporalio.Api.WorkflowService.V1.ListScheduleMatchingTimesResponse> __Method_ListScheduleMatchingTimes = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListScheduleMatchingTimesRequest, global::Temporalio.Api.WorkflowService.V1.ListScheduleMatchingTimesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListScheduleMatchingTimes",
        __Marshaller_temporal_api_workflowservice_v1_ListScheduleMatchingTimesRequest,
        __Marshaller_temporal_api_workflowservice_v1_ListScheduleMatchingTimesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.DeleteScheduleRequest, global::Temporalio.Api.WorkflowService.V1.DeleteScheduleResponse> __Method_DeleteSchedule = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.DeleteScheduleRequest, global::Temporalio.Api.WorkflowService.V1.DeleteScheduleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSchedule",
        __Marshaller_temporal_api_workflowservice_v1_DeleteScheduleRequest,
        __Marshaller_temporal_api_workflowservice_v1_DeleteScheduleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListSchedulesRequest, global::Temporalio.Api.WorkflowService.V1.ListSchedulesResponse> __Method_ListSchedules = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListSchedulesRequest, global::Temporalio.Api.WorkflowService.V1.ListSchedulesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSchedules",
        __Marshaller_temporal_api_workflowservice_v1_ListSchedulesRequest,
        __Marshaller_temporal_api_workflowservice_v1_ListSchedulesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateWorkerBuildIdCompatibilityRequest, global::Temporalio.Api.WorkflowService.V1.UpdateWorkerBuildIdCompatibilityResponse> __Method_UpdateWorkerBuildIdCompatibility = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateWorkerBuildIdCompatibilityRequest, global::Temporalio.Api.WorkflowService.V1.UpdateWorkerBuildIdCompatibilityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWorkerBuildIdCompatibility",
        __Marshaller_temporal_api_workflowservice_v1_UpdateWorkerBuildIdCompatibilityRequest,
        __Marshaller_temporal_api_workflowservice_v1_UpdateWorkerBuildIdCompatibilityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetWorkerBuildIdCompatibilityRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkerBuildIdCompatibilityResponse> __Method_GetWorkerBuildIdCompatibility = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetWorkerBuildIdCompatibilityRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkerBuildIdCompatibilityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkerBuildIdCompatibility",
        __Marshaller_temporal_api_workflowservice_v1_GetWorkerBuildIdCompatibilityRequest,
        __Marshaller_temporal_api_workflowservice_v1_GetWorkerBuildIdCompatibilityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateWorkerVersioningRulesRequest, global::Temporalio.Api.WorkflowService.V1.UpdateWorkerVersioningRulesResponse> __Method_UpdateWorkerVersioningRules = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateWorkerVersioningRulesRequest, global::Temporalio.Api.WorkflowService.V1.UpdateWorkerVersioningRulesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWorkerVersioningRules",
        __Marshaller_temporal_api_workflowservice_v1_UpdateWorkerVersioningRulesRequest,
        __Marshaller_temporal_api_workflowservice_v1_UpdateWorkerVersioningRulesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetWorkerVersioningRulesRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkerVersioningRulesResponse> __Method_GetWorkerVersioningRules = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetWorkerVersioningRulesRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkerVersioningRulesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkerVersioningRules",
        __Marshaller_temporal_api_workflowservice_v1_GetWorkerVersioningRulesRequest,
        __Marshaller_temporal_api_workflowservice_v1_GetWorkerVersioningRulesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetWorkerTaskReachabilityRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkerTaskReachabilityResponse> __Method_GetWorkerTaskReachability = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetWorkerTaskReachabilityRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkerTaskReachabilityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkerTaskReachability",
        __Marshaller_temporal_api_workflowservice_v1_GetWorkerTaskReachabilityRequest,
        __Marshaller_temporal_api_workflowservice_v1_GetWorkerTaskReachabilityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.DescribeDeploymentRequest, global::Temporalio.Api.WorkflowService.V1.DescribeDeploymentResponse> __Method_DescribeDeployment = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.DescribeDeploymentRequest, global::Temporalio.Api.WorkflowService.V1.DescribeDeploymentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DescribeDeployment",
        __Marshaller_temporal_api_workflowservice_v1_DescribeDeploymentRequest,
        __Marshaller_temporal_api_workflowservice_v1_DescribeDeploymentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListDeploymentsRequest, global::Temporalio.Api.WorkflowService.V1.ListDeploymentsResponse> __Method_ListDeployments = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListDeploymentsRequest, global::Temporalio.Api.WorkflowService.V1.ListDeploymentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDeployments",
        __Marshaller_temporal_api_workflowservice_v1_ListDeploymentsRequest,
        __Marshaller_temporal_api_workflowservice_v1_ListDeploymentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetDeploymentReachabilityRequest, global::Temporalio.Api.WorkflowService.V1.GetDeploymentReachabilityResponse> __Method_GetDeploymentReachability = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetDeploymentReachabilityRequest, global::Temporalio.Api.WorkflowService.V1.GetDeploymentReachabilityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDeploymentReachability",
        __Marshaller_temporal_api_workflowservice_v1_GetDeploymentReachabilityRequest,
        __Marshaller_temporal_api_workflowservice_v1_GetDeploymentReachabilityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetCurrentDeploymentRequest, global::Temporalio.Api.WorkflowService.V1.GetCurrentDeploymentResponse> __Method_GetCurrentDeployment = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.GetCurrentDeploymentRequest, global::Temporalio.Api.WorkflowService.V1.GetCurrentDeploymentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCurrentDeployment",
        __Marshaller_temporal_api_workflowservice_v1_GetCurrentDeploymentRequest,
        __Marshaller_temporal_api_workflowservice_v1_GetCurrentDeploymentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.SetCurrentDeploymentRequest, global::Temporalio.Api.WorkflowService.V1.SetCurrentDeploymentResponse> __Method_SetCurrentDeployment = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.SetCurrentDeploymentRequest, global::Temporalio.Api.WorkflowService.V1.SetCurrentDeploymentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCurrentDeployment",
        __Marshaller_temporal_api_workflowservice_v1_SetCurrentDeploymentRequest,
        __Marshaller_temporal_api_workflowservice_v1_SetCurrentDeploymentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionResponse> __Method_UpdateWorkflowExecution = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWorkflowExecution",
        __Marshaller_temporal_api_workflowservice_v1_UpdateWorkflowExecutionRequest,
        __Marshaller_temporal_api_workflowservice_v1_UpdateWorkflowExecutionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.PollWorkflowExecutionUpdateRequest, global::Temporalio.Api.WorkflowService.V1.PollWorkflowExecutionUpdateResponse> __Method_PollWorkflowExecutionUpdate = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.PollWorkflowExecutionUpdateRequest, global::Temporalio.Api.WorkflowService.V1.PollWorkflowExecutionUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PollWorkflowExecutionUpdate",
        __Marshaller_temporal_api_workflowservice_v1_PollWorkflowExecutionUpdateRequest,
        __Marshaller_temporal_api_workflowservice_v1_PollWorkflowExecutionUpdateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.StartBatchOperationRequest, global::Temporalio.Api.WorkflowService.V1.StartBatchOperationResponse> __Method_StartBatchOperation = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.StartBatchOperationRequest, global::Temporalio.Api.WorkflowService.V1.StartBatchOperationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartBatchOperation",
        __Marshaller_temporal_api_workflowservice_v1_StartBatchOperationRequest,
        __Marshaller_temporal_api_workflowservice_v1_StartBatchOperationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.StopBatchOperationRequest, global::Temporalio.Api.WorkflowService.V1.StopBatchOperationResponse> __Method_StopBatchOperation = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.StopBatchOperationRequest, global::Temporalio.Api.WorkflowService.V1.StopBatchOperationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StopBatchOperation",
        __Marshaller_temporal_api_workflowservice_v1_StopBatchOperationRequest,
        __Marshaller_temporal_api_workflowservice_v1_StopBatchOperationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.DescribeBatchOperationRequest, global::Temporalio.Api.WorkflowService.V1.DescribeBatchOperationResponse> __Method_DescribeBatchOperation = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.DescribeBatchOperationRequest, global::Temporalio.Api.WorkflowService.V1.DescribeBatchOperationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DescribeBatchOperation",
        __Marshaller_temporal_api_workflowservice_v1_DescribeBatchOperationRequest,
        __Marshaller_temporal_api_workflowservice_v1_DescribeBatchOperationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListBatchOperationsRequest, global::Temporalio.Api.WorkflowService.V1.ListBatchOperationsResponse> __Method_ListBatchOperations = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ListBatchOperationsRequest, global::Temporalio.Api.WorkflowService.V1.ListBatchOperationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBatchOperations",
        __Marshaller_temporal_api_workflowservice_v1_ListBatchOperationsRequest,
        __Marshaller_temporal_api_workflowservice_v1_ListBatchOperationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.PollNexusTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.PollNexusTaskQueueResponse> __Method_PollNexusTaskQueue = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.PollNexusTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.PollNexusTaskQueueResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PollNexusTaskQueue",
        __Marshaller_temporal_api_workflowservice_v1_PollNexusTaskQueueRequest,
        __Marshaller_temporal_api_workflowservice_v1_PollNexusTaskQueueResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskCompletedRequest, global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskCompletedResponse> __Method_RespondNexusTaskCompleted = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskCompletedRequest, global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskCompletedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RespondNexusTaskCompleted",
        __Marshaller_temporal_api_workflowservice_v1_RespondNexusTaskCompletedRequest,
        __Marshaller_temporal_api_workflowservice_v1_RespondNexusTaskCompletedResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskFailedRequest, global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskFailedResponse> __Method_RespondNexusTaskFailed = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskFailedRequest, global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskFailedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RespondNexusTaskFailed",
        __Marshaller_temporal_api_workflowservice_v1_RespondNexusTaskFailedRequest,
        __Marshaller_temporal_api_workflowservice_v1_RespondNexusTaskFailedResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateActivityOptionsByIdRequest, global::Temporalio.Api.WorkflowService.V1.UpdateActivityOptionsByIdResponse> __Method_UpdateActivityOptionsById = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateActivityOptionsByIdRequest, global::Temporalio.Api.WorkflowService.V1.UpdateActivityOptionsByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateActivityOptionsById",
        __Marshaller_temporal_api_workflowservice_v1_UpdateActivityOptionsByIdRequest,
        __Marshaller_temporal_api_workflowservice_v1_UpdateActivityOptionsByIdResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionOptionsRequest, global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionOptionsResponse> __Method_UpdateWorkflowExecutionOptions = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionOptionsRequest, global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionOptionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWorkflowExecutionOptions",
        __Marshaller_temporal_api_workflowservice_v1_UpdateWorkflowExecutionOptionsRequest,
        __Marshaller_temporal_api_workflowservice_v1_UpdateWorkflowExecutionOptionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.PauseActivityByIdRequest, global::Temporalio.Api.WorkflowService.V1.PauseActivityByIdResponse> __Method_PauseActivityById = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.PauseActivityByIdRequest, global::Temporalio.Api.WorkflowService.V1.PauseActivityByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PauseActivityById",
        __Marshaller_temporal_api_workflowservice_v1_PauseActivityByIdRequest,
        __Marshaller_temporal_api_workflowservice_v1_PauseActivityByIdResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.UnpauseActivityByIdRequest, global::Temporalio.Api.WorkflowService.V1.UnpauseActivityByIdResponse> __Method_UnpauseActivityById = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.UnpauseActivityByIdRequest, global::Temporalio.Api.WorkflowService.V1.UnpauseActivityByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnpauseActivityById",
        __Marshaller_temporal_api_workflowservice_v1_UnpauseActivityByIdRequest,
        __Marshaller_temporal_api_workflowservice_v1_UnpauseActivityByIdResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Temporalio.Api.WorkflowService.V1.ResetActivityByIdRequest, global::Temporalio.Api.WorkflowService.V1.ResetActivityByIdResponse> __Method_ResetActivityById = new grpc::Method<global::Temporalio.Api.WorkflowService.V1.ResetActivityByIdRequest, global::Temporalio.Api.WorkflowService.V1.ResetActivityByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetActivityById",
        __Marshaller_temporal_api_workflowservice_v1_ResetActivityByIdRequest,
        __Marshaller_temporal_api_workflowservice_v1_ResetActivityByIdResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Temporalio.Api.WorkflowService.V1.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of WorkflowService</summary>
    [grpc::BindServiceMethod(typeof(WorkflowService), "BindService")]
    public abstract partial class WorkflowServiceBase
    {
      /// <summary>
      /// RegisterNamespace creates a new namespace which can be used as a container for all resources.
      ///
      /// A Namespace is a top level entity within Temporal, and is used as a container for resources
      /// like workflow executions, task queues, etc. A Namespace acts as a sandbox and provides
      /// isolation for all resources within the namespace. All resources belongs to exactly one
      /// namespace.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RegisterNamespaceResponse> RegisterNamespace(global::Temporalio.Api.WorkflowService.V1.RegisterNamespaceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DescribeNamespace returns the information and configuration for a registered namespace.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.DescribeNamespaceResponse> DescribeNamespace(global::Temporalio.Api.WorkflowService.V1.DescribeNamespaceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ListNamespaces returns the information and configuration for all namespaces.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ListNamespacesResponse> ListNamespaces(global::Temporalio.Api.WorkflowService.V1.ListNamespacesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpdateNamespace is used to update the information and configuration of a registered
      /// namespace.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.UpdateNamespaceResponse> UpdateNamespace(global::Temporalio.Api.WorkflowService.V1.UpdateNamespaceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DeprecateNamespace is used to update the state of a registered namespace to DEPRECATED.
      ///
      /// Once the namespace is deprecated it cannot be used to start new workflow executions. Existing
      /// workflow executions will continue to run on deprecated namespaces.
      /// Deprecated.
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: Deprecated --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.DeprecateNamespaceResponse> DeprecateNamespace(global::Temporalio.Api.WorkflowService.V1.DeprecateNamespaceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// StartWorkflowExecution starts a new workflow execution.
      ///
      /// It will create the execution with a `WORKFLOW_EXECUTION_STARTED` event in its history and
      /// also schedule the first workflow task. Returns `WorkflowExecutionAlreadyStarted`, if an
      /// instance already exists with same workflow id.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.StartWorkflowExecutionResponse> StartWorkflowExecution(global::Temporalio.Api.WorkflowService.V1.StartWorkflowExecutionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ExecuteMultiOperation executes multiple operations within a single workflow.
      ///
      /// Operations are started atomically, meaning if *any* operation fails to be started, none are,
      /// and the request fails. Upon start, the API returns only when *all* operations have a response.
      ///
      /// Upon failure, it returns `MultiOperationExecutionFailure` where the status code
      /// equals the status code of the *first* operation that failed to be started.
      ///
      /// NOTE: Experimental API.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ExecuteMultiOperationResponse> ExecuteMultiOperation(global::Temporalio.Api.WorkflowService.V1.ExecuteMultiOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetWorkflowExecutionHistory returns the history of specified workflow execution. Fails with
      /// `NotFound` if the specified workflow execution is unknown to the service.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryResponse> GetWorkflowExecutionHistory(global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetWorkflowExecutionHistoryReverse returns the history of specified workflow execution in reverse 
      /// order (starting from last event). Fails with`NotFound` if the specified workflow execution is 
      /// unknown to the service.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryReverseResponse> GetWorkflowExecutionHistoryReverse(global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryReverseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// PollWorkflowTaskQueue is called by workers to make progress on workflows.
      ///
      /// A WorkflowTask is dispatched to callers for active workflow executions with pending workflow
      /// tasks. The worker is expected to call `RespondWorkflowTaskCompleted` when it is done
      /// processing the task. The service will create a `WorkflowTaskStarted` event in the history for
      /// this task before handing it to the worker.
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do not expose worker API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.PollWorkflowTaskQueueResponse> PollWorkflowTaskQueue(global::Temporalio.Api.WorkflowService.V1.PollWorkflowTaskQueueRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RespondWorkflowTaskCompleted is called by workers to successfully complete workflow tasks
      /// they received from `PollWorkflowTaskQueue`.
      ///
      /// Completing a WorkflowTask will write a `WORKFLOW_TASK_COMPLETED` event to the workflow's
      /// history, along with events corresponding to whatever commands the SDK generated while
      /// executing the task (ex timer started, activity task scheduled, etc).
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do not expose worker API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskCompletedResponse> RespondWorkflowTaskCompleted(global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskCompletedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RespondWorkflowTaskFailed is called by workers to indicate the processing of a workflow task
      /// failed.
      ///
      /// This results in a `WORKFLOW_TASK_FAILED` event written to the history, and a new workflow
      /// task will be scheduled. This API can be used to report unhandled failures resulting from
      /// applying the workflow task.
      ///
      /// Temporal will only append first WorkflowTaskFailed event to the history of workflow execution
      /// for consecutive failures.
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do not expose worker API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskFailedResponse> RespondWorkflowTaskFailed(global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskFailedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// PollActivityTaskQueue is called by workers to process activity tasks from a specific task
      /// queue.
      ///
      /// The worker is expected to call one of the `RespondActivityTaskXXX` methods when it is done
      /// processing the task.
      ///
      /// An activity task is dispatched whenever a `SCHEDULE_ACTIVITY_TASK` command is produced during
      /// workflow execution. An in memory `ACTIVITY_TASK_STARTED` event is written to mutable state
      /// before the task is dispatched to the worker. The started event, and the final event
      /// (`ACTIVITY_TASK_COMPLETED` / `ACTIVITY_TASK_FAILED` / `ACTIVITY_TASK_TIMED_OUT`) will both be
      /// written permanently to Workflow execution history when Activity is finished. This is done to
      /// avoid writing many events in the case of a failure/retry loop.
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do not expose worker API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.PollActivityTaskQueueResponse> PollActivityTaskQueue(global::Temporalio.Api.WorkflowService.V1.PollActivityTaskQueueRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RecordActivityTaskHeartbeat is optionally called by workers while they execute activities.
      ///
      /// If worker fails to heartbeat within the `heartbeat_timeout` interval for the activity task,
      /// then it will be marked as timed out and an `ACTIVITY_TASK_TIMED_OUT` event will be written to
      /// the workflow history. Calling `RecordActivityTaskHeartbeat` will fail with `NotFound` in
      /// such situations, in that event, the SDK should request cancellation of the activity.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatResponse> RecordActivityTaskHeartbeat(global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// See `RecordActivityTaskHeartbeat`. This version allows clients to record heartbeats by
      /// namespace/workflow id/activity id instead of task token.
      ///
      /// (-- api-linter: core::0136::prepositions=disabled
      ///     aip.dev/not-precedent: "By" is used to indicate request type. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatByIdResponse> RecordActivityTaskHeartbeatById(global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RespondActivityTaskCompleted is called by workers when they successfully complete an activity
      /// task.
      ///
      /// This results in a new `ACTIVITY_TASK_COMPLETED` event being written to the workflow history
      /// and a new workflow task created for the workflow. Fails with `NotFound` if the task token is
      /// no longer valid due to activity timeout, already being completed, or never having existed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedResponse> RespondActivityTaskCompleted(global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// See `RecordActivityTaskCompleted`. This version allows clients to record completions by
      /// namespace/workflow id/activity id instead of task token.
      ///
      /// (-- api-linter: core::0136::prepositions=disabled
      ///     aip.dev/not-precedent: "By" is used to indicate request type. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedByIdResponse> RespondActivityTaskCompletedById(global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RespondActivityTaskFailed is called by workers when processing an activity task fails.
      ///
      /// This results in a new `ACTIVITY_TASK_FAILED` event being written to the workflow history and
      /// a new workflow task created for the workflow. Fails with `NotFound` if the task token is no
      /// longer valid due to activity timeout, already being completed, or never having existed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedResponse> RespondActivityTaskFailed(global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// See `RecordActivityTaskFailed`. This version allows clients to record failures by
      /// namespace/workflow id/activity id instead of task token.
      ///
      /// (-- api-linter: core::0136::prepositions=disabled
      ///     aip.dev/not-precedent: "By" is used to indicate request type. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedByIdResponse> RespondActivityTaskFailedById(global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RespondActivityTaskFailed is called by workers when processing an activity task fails.
      ///
      /// This results in a new `ACTIVITY_TASK_CANCELED` event being written to the workflow history
      /// and a new workflow task created for the workflow. Fails with `NotFound` if the task token is
      /// no longer valid due to activity timeout, already being completed, or never having existed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledResponse> RespondActivityTaskCanceled(global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// See `RecordActivityTaskCanceled`. This version allows clients to record failures by
      /// namespace/workflow id/activity id instead of task token.
      ///
      /// (-- api-linter: core::0136::prepositions=disabled
      ///     aip.dev/not-precedent: "By" is used to indicate request type. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledByIdResponse> RespondActivityTaskCanceledById(global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RequestCancelWorkflowExecution is called by workers when they want to request cancellation of
      /// a workflow execution.
      ///
      /// This results in a new `WORKFLOW_EXECUTION_CANCEL_REQUESTED` event being written to the
      /// workflow history and a new workflow task created for the workflow. It returns success if the requested
      /// workflow is already closed. It fails with 'NotFound' if the requested workflow doesn't exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RequestCancelWorkflowExecutionResponse> RequestCancelWorkflowExecution(global::Temporalio.Api.WorkflowService.V1.RequestCancelWorkflowExecutionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// SignalWorkflowExecution is used to send a signal to a running workflow execution.
      ///
      /// This results in a `WORKFLOW_EXECUTION_SIGNALED` event recorded in the history and a workflow
      /// task being created for the execution.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.SignalWorkflowExecutionResponse> SignalWorkflowExecution(global::Temporalio.Api.WorkflowService.V1.SignalWorkflowExecutionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// SignalWithStartWorkflowExecution is used to ensure a signal is sent to a workflow, even if
      /// it isn't yet started.
      ///
      /// If the workflow is running, a `WORKFLOW_EXECUTION_SIGNALED` event is recorded in the history
      /// and a workflow task is generated.
      ///
      /// If the workflow is not running or not found, then the workflow is created with
      /// `WORKFLOW_EXECUTION_STARTED` and `WORKFLOW_EXECUTION_SIGNALED` events in its history, and a
      /// workflow task is generated.
      ///
      /// (-- api-linter: core::0136::prepositions=disabled
      ///     aip.dev/not-precedent: "With" is used to indicate combined operation. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.SignalWithStartWorkflowExecutionResponse> SignalWithStartWorkflowExecution(global::Temporalio.Api.WorkflowService.V1.SignalWithStartWorkflowExecutionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ResetWorkflowExecution will reset an existing workflow execution to a specified
      /// `WORKFLOW_TASK_COMPLETED` event (exclusive). It will immediately terminate the current
      /// execution instance.
      /// TODO: Does exclusive here mean *just* the completed event, or also WFT started? Otherwise the task is doomed to time out?
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ResetWorkflowExecutionResponse> ResetWorkflowExecution(global::Temporalio.Api.WorkflowService.V1.ResetWorkflowExecutionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// TerminateWorkflowExecution terminates an existing workflow execution by recording a
      /// `WORKFLOW_EXECUTION_TERMINATED` event in the history and immediately terminating the
      /// execution instance.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.TerminateWorkflowExecutionResponse> TerminateWorkflowExecution(global::Temporalio.Api.WorkflowService.V1.TerminateWorkflowExecutionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DeleteWorkflowExecution asynchronously deletes a specific Workflow Execution (when
      /// WorkflowExecution.run_id is provided) or the latest Workflow Execution (when
      /// WorkflowExecution.run_id is not provided). If the Workflow Execution is Running, it will be
      /// terminated before deletion.
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: Workflow deletion not exposed to HTTP, users should use cancel or terminate. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.DeleteWorkflowExecutionResponse> DeleteWorkflowExecution(global::Temporalio.Api.WorkflowService.V1.DeleteWorkflowExecutionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ListOpenWorkflowExecutions is a visibility API to list the open executions in a specific namespace.
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: HTTP users should use ListWorkflowExecutions instead. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ListOpenWorkflowExecutionsResponse> ListOpenWorkflowExecutions(global::Temporalio.Api.WorkflowService.V1.ListOpenWorkflowExecutionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ListClosedWorkflowExecutions is a visibility API to list the closed executions in a specific namespace.
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: HTTP users should use ListWorkflowExecutions instead. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ListClosedWorkflowExecutionsResponse> ListClosedWorkflowExecutions(global::Temporalio.Api.WorkflowService.V1.ListClosedWorkflowExecutionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ListWorkflowExecutions is a visibility API to list workflow executions in a specific namespace.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ListWorkflowExecutionsResponse> ListWorkflowExecutions(global::Temporalio.Api.WorkflowService.V1.ListWorkflowExecutionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ListArchivedWorkflowExecutions is a visibility API to list archived workflow executions in a specific namespace.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ListArchivedWorkflowExecutionsResponse> ListArchivedWorkflowExecutions(global::Temporalio.Api.WorkflowService.V1.ListArchivedWorkflowExecutionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ScanWorkflowExecutions is a visibility API to list large amount of workflow executions in a specific namespace without order.
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: HTTP users should use ListWorkflowExecutions instead. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ScanWorkflowExecutionsResponse> ScanWorkflowExecutions(global::Temporalio.Api.WorkflowService.V1.ScanWorkflowExecutionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// CountWorkflowExecutions is a visibility API to count of workflow executions in a specific namespace.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.CountWorkflowExecutionsResponse> CountWorkflowExecutions(global::Temporalio.Api.WorkflowService.V1.CountWorkflowExecutionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetSearchAttributes is a visibility API to get all legal keys that could be used in list APIs
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do not expose this search attribute API to HTTP (but may expose on OperatorService). --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.GetSearchAttributesResponse> GetSearchAttributes(global::Temporalio.Api.WorkflowService.V1.GetSearchAttributesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RespondQueryTaskCompleted is called by workers to complete queries which were delivered on
      /// the `query` (not `queries`) field of a `PollWorkflowTaskQueueResponse`.
      ///
      /// Completing the query will unblock the corresponding client call to `QueryWorkflow` and return
      /// the query result a response.
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do not expose worker API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RespondQueryTaskCompletedResponse> RespondQueryTaskCompleted(global::Temporalio.Api.WorkflowService.V1.RespondQueryTaskCompletedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ResetStickyTaskQueue resets the sticky task queue related information in the mutable state of
      /// a given workflow. This is prudent for workers to perform if a workflow has been paged out of
      /// their cache.
      ///
      /// Things cleared are:
      /// 1. StickyTaskQueue
      /// 2. StickyScheduleToStartTimeout
      ///
      /// When possible, ShutdownWorker should be preferred over
      /// ResetStickyTaskQueue (particularly when a worker is shutting down or
      /// cycling).
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do not expose worker API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ResetStickyTaskQueueResponse> ResetStickyTaskQueue(global::Temporalio.Api.WorkflowService.V1.ResetStickyTaskQueueRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ShutdownWorker is used to indicate that the given sticky task
      /// queue is no longer being polled by its worker. Following the completion of
      /// ShutdownWorker, newly-added workflow tasks will instead be placed
      /// in the normal task queue, eligible for any worker to pick up.
      ///
      /// ShutdownWorker should be called by workers while shutting down,
      /// after they've shut down their pollers. If another sticky poll
      /// request is issued, the sticky task queue will be revived.
      ///
      /// As of Temporal Server v1.25.0, ShutdownWorker hasn't yet been implemented.
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do not expose worker API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ShutdownWorkerResponse> ShutdownWorker(global::Temporalio.Api.WorkflowService.V1.ShutdownWorkerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// QueryWorkflow requests a query be executed for a specified workflow execution.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.QueryWorkflowResponse> QueryWorkflow(global::Temporalio.Api.WorkflowService.V1.QueryWorkflowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DescribeWorkflowExecution returns information about the specified workflow execution.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.DescribeWorkflowExecutionResponse> DescribeWorkflowExecution(global::Temporalio.Api.WorkflowService.V1.DescribeWorkflowExecutionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DescribeTaskQueue returns the following information about the target task queue, broken down by Build ID:
      ///   - List of pollers
      ///   - Workflow Reachability status
      ///   - Backlog info for Workflow and/or Activity tasks
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.DescribeTaskQueueResponse> DescribeTaskQueue(global::Temporalio.Api.WorkflowService.V1.DescribeTaskQueueRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetClusterInfo returns information about temporal cluster
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.GetClusterInfoResponse> GetClusterInfo(global::Temporalio.Api.WorkflowService.V1.GetClusterInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetSystemInfo returns information about the system.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.GetSystemInfoResponse> GetSystemInfo(global::Temporalio.Api.WorkflowService.V1.GetSystemInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do not expose this low-level API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ListTaskQueuePartitionsResponse> ListTaskQueuePartitions(global::Temporalio.Api.WorkflowService.V1.ListTaskQueuePartitionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new schedule.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.CreateScheduleResponse> CreateSchedule(global::Temporalio.Api.WorkflowService.V1.CreateScheduleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the schedule description and current state of an existing schedule.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.DescribeScheduleResponse> DescribeSchedule(global::Temporalio.Api.WorkflowService.V1.DescribeScheduleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Changes the configuration or state of an existing schedule.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.UpdateScheduleResponse> UpdateSchedule(global::Temporalio.Api.WorkflowService.V1.UpdateScheduleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Makes a specific change to a schedule or triggers an immediate action.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.PatchScheduleResponse> PatchSchedule(global::Temporalio.Api.WorkflowService.V1.PatchScheduleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists matching times within a range.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ListScheduleMatchingTimesResponse> ListScheduleMatchingTimes(global::Temporalio.Api.WorkflowService.V1.ListScheduleMatchingTimesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a schedule, removing it from the system.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.DeleteScheduleResponse> DeleteSchedule(global::Temporalio.Api.WorkflowService.V1.DeleteScheduleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List all schedules in a namespace.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ListSchedulesResponse> ListSchedules(global::Temporalio.Api.WorkflowService.V1.ListSchedulesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated. Use `UpdateWorkerVersioningRules`.
      ///
      /// Allows users to specify sets of worker build id versions on a per task queue basis. Versions
      /// are ordered, and may be either compatible with some extant version, or a new incompatible
      /// version, forming sets of ids which are incompatible with each other, but whose contained
      /// members are compatible with one another.
      ///
      /// A single build id may be mapped to multiple task queues using this API for cases where a single process hosts
      /// multiple workers. 
      /// 
      /// To query which workers can be retired, use the `GetWorkerTaskReachability` API.
      ///
      /// NOTE: The number of task queues mapped to a single build id is limited by the `limit.taskQueuesPerBuildId`
      /// (default is 20), if this limit is exceeded this API will error with a FailedPrecondition.
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do yet expose versioning API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.UpdateWorkerBuildIdCompatibilityResponse> UpdateWorkerBuildIdCompatibility(global::Temporalio.Api.WorkflowService.V1.UpdateWorkerBuildIdCompatibilityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated. Use `GetWorkerVersioningRules`.
      /// Fetches the worker build id versioning sets for a task queue.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.GetWorkerBuildIdCompatibilityResponse> GetWorkerBuildIdCompatibility(global::Temporalio.Api.WorkflowService.V1.GetWorkerBuildIdCompatibilityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this API to manage Worker Versioning Rules for a given Task Queue. There are two types of
      /// rules: Build ID Assignment rules and Compatible Build ID Redirect rules.
      ///
      /// Assignment rules determine how to assign new executions to a Build IDs. Their primary
      /// use case is to specify the latest Build ID but they have powerful features for gradual rollout
      /// of a new Build ID.
      ///
      /// Once a workflow execution is assigned to a Build ID and it completes its first Workflow Task,
      /// the workflow stays on the assigned Build ID regardless of changes in assignment rules. This
      /// eliminates the need for compatibility between versions when you only care about using the new
      /// version for new workflows and let existing workflows finish in their own version.
      ///
      /// Activities, Child Workflows and Continue-as-New executions have the option to inherit the
      /// Build ID of their parent/previous workflow or use the latest assignment rules to independently
      /// select a Build ID.
      ///
      /// Redirect rules should only be used when you want to move workflows and activities assigned to
      /// one Build ID (source) to another compatible Build ID (target). You are responsible to make sure
      /// the target Build ID of a redirect rule is able to process event histories made by the source
      /// Build ID by using [Patching](https://docs.temporal.io/workflows#patching) or other means.
      ///
      /// WARNING: Worker Versioning is not yet stable and the API and behavior may change incompatibly.
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do yet expose versioning API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.UpdateWorkerVersioningRulesResponse> UpdateWorkerVersioningRules(global::Temporalio.Api.WorkflowService.V1.UpdateWorkerVersioningRulesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Fetches the Build ID assignment and redirect rules for a Task Queue.
      /// WARNING: Worker Versioning is not yet stable and the API and behavior may change incompatibly.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.GetWorkerVersioningRulesResponse> GetWorkerVersioningRules(global::Temporalio.Api.WorkflowService.V1.GetWorkerVersioningRulesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated. Use `DescribeTaskQueue`.
      ///
      /// Fetches task reachability to determine whether a worker may be retired.
      /// The request may specify task queues to query for or let the server fetch all task queues mapped to the given
      /// build IDs.
      ///
      /// When requesting a large number of task queues or all task queues associated with the given build ids in a
      /// namespace, all task queues will be listed in the response but some of them may not contain reachability
      /// information due to a server enforced limit. When reaching the limit, task queues that reachability information
      /// could not be retrieved for will be marked with a single TASK_REACHABILITY_UNSPECIFIED entry. The caller may issue
      /// another call to get the reachability for those task queues.
      ///
      /// Open source users can adjust this limit by setting the server's dynamic config value for
      /// `limit.reachabilityTaskQueueScan` with the caveat that this call can strain the visibility store.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.GetWorkerTaskReachabilityResponse> GetWorkerTaskReachability(global::Temporalio.Api.WorkflowService.V1.GetWorkerTaskReachabilityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Describes a worker deployment.
      /// Experimental. This API might significantly change or be removed in a future release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.DescribeDeploymentResponse> DescribeDeployment(global::Temporalio.Api.WorkflowService.V1.DescribeDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists worker deployments in the namespace. Optionally can filter based on deployment series
      /// name.
      /// Experimental. This API might significantly change or be removed in a future release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ListDeploymentsResponse> ListDeployments(global::Temporalio.Api.WorkflowService.V1.ListDeploymentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the reachability level of a worker deployment to help users decide when it is time
      /// to decommission a deployment. Reachability level is calculated based on the deployment's
      /// `status` and existing workflows that depend on the given deployment for their execution.
      /// Calculating reachability is relatively expensive. Therefore, server might return a recently
      /// cached value. In such a case, the `last_update_time` will inform you about the actual
      /// reachability calculation time.
      /// Experimental. This API might significantly change or be removed in a future release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.GetDeploymentReachabilityResponse> GetDeploymentReachability(global::Temporalio.Api.WorkflowService.V1.GetDeploymentReachabilityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the current deployment (and its info) for a given deployment series.
      /// Experimental. This API might significantly change or be removed in a future release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.GetCurrentDeploymentResponse> GetCurrentDeployment(global::Temporalio.Api.WorkflowService.V1.GetCurrentDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sets a deployment as the current deployment for its deployment series. Can optionally update
      /// the metadata of the deployment as well.
      /// Experimental. This API might significantly change or be removed in a future release.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.SetCurrentDeploymentResponse> SetCurrentDeployment(global::Temporalio.Api.WorkflowService.V1.SetCurrentDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Invokes the specified Update function on user Workflow code.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionResponse> UpdateWorkflowExecution(global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Polls a Workflow Execution for the outcome of a Workflow Update
      /// previously issued through the UpdateWorkflowExecution RPC. The effective
      /// timeout on this call will be shorter of the the caller-supplied gRPC
      /// timeout and the server's configured long-poll timeout.
      ///
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We don't expose update polling API to HTTP in favor of a potential future non-blocking form. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.PollWorkflowExecutionUpdateResponse> PollWorkflowExecutionUpdate(global::Temporalio.Api.WorkflowService.V1.PollWorkflowExecutionUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// StartBatchOperation starts a new batch operation
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.StartBatchOperationResponse> StartBatchOperation(global::Temporalio.Api.WorkflowService.V1.StartBatchOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// StopBatchOperation stops a batch operation
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.StopBatchOperationResponse> StopBatchOperation(global::Temporalio.Api.WorkflowService.V1.StopBatchOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// DescribeBatchOperation returns the information about a batch operation
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.DescribeBatchOperationResponse> DescribeBatchOperation(global::Temporalio.Api.WorkflowService.V1.DescribeBatchOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ListBatchOperations returns a list of batch operations
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ListBatchOperationsResponse> ListBatchOperations(global::Temporalio.Api.WorkflowService.V1.ListBatchOperationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// PollNexusTaskQueue is a long poll call used by workers to receive Nexus tasks.
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do not expose worker API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.PollNexusTaskQueueResponse> PollNexusTaskQueue(global::Temporalio.Api.WorkflowService.V1.PollNexusTaskQueueRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RespondNexusTaskCompleted is called by workers to respond to Nexus tasks received via PollNexusTaskQueue.
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do not expose worker API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskCompletedResponse> RespondNexusTaskCompleted(global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskCompletedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RespondNexusTaskFailed is called by workers to fail Nexus tasks received via PollNexusTaskQueue.
      /// (-- api-linter: core::0127::http-annotation=disabled
      ///     aip.dev/not-precedent: We do not expose worker API to HTTP. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskFailedResponse> RespondNexusTaskFailed(global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskFailedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpdateActivityOptionsById is called by the client to update the options of an activity
      /// (-- api-linter: core::0136::prepositions=disabled
      ///     aip.dev/not-precedent: "By" is used to indicate request type. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.UpdateActivityOptionsByIdResponse> UpdateActivityOptionsById(global::Temporalio.Api.WorkflowService.V1.UpdateActivityOptionsByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpdateWorkflowExecutionOptions partially updates the WorkflowExecutionOptions of an existing workflow execution.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionOptionsResponse> UpdateWorkflowExecutionOptions(global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionOptionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// PauseActivityById pauses the execution of an activity specified by its ID.
      /// Returns a `NotFound` error if there is no pending activity with the provided ID.
      ///
      /// Pausing an activity means:
      /// - If the activity is currently waiting for a retry or is running and subsequently fails,
      ///   it will not be rescheduled until it is unpaused.
      /// - If the activity is already paused, calling this method will have no effect.
      /// - If the activity is running and finishes successfully, the activity will be completed.
      /// - If the activity is running and finishes with failure:
      ///   * if there is no retry left - the activity will be completed.
      ///   * if there are more retries left - the activity will be paused.
      /// For long-running activities:
      /// - activities in paused state will send a cancellation with "activity_paused" set to 'true' in response to 'RecordActivityTaskHeartbeat'.
      /// - The activity should respond to the cancellation accordingly.
      /// (-- api-linter: core::0136::prepositions=disabled
      ///     aip.dev/not-precedent: "By" is used to indicate request type. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.PauseActivityByIdResponse> PauseActivityById(global::Temporalio.Api.WorkflowService.V1.PauseActivityByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UnpauseActivityById unpauses the execution of an activity specified by its ID.
      /// Returns a `NotFound` error if there is no pending activity with the provided ID.
      /// There are two 'modes' of unpausing an activity:
      /// 'resume' - If the activity is paused, it will be resumed and scheduled for execution.
      ///    * If the activity is currently running Unpause with 'resume' has no effect.
      ///    * if 'no_wait' flag is set and the activity is waiting, the activity will be scheduled immediately.
      /// 'reset' - If the activity is paused, it will be reset to its initial state and (depending on parameters) scheduled for execution.
      ///    * If the activity is currently running, Unpause with 'reset' will reset the number of attempts.
      ///    * if 'no_wait' flag is set, the activity will be scheduled immediately.
      ///    * if 'reset_heartbeats' flag is set, the activity heartbeat timer and heartbeats will be reset.
      /// If the activity is in waiting for retry and past it retry timeout, it will be scheduled immediately.
      /// Once the activity is unpaused, all timeout timers will be regenerated.
      /// (-- api-linter: core::0136::prepositions=disabled
      ///     aip.dev/not-precedent: "By" is used to indicate request type. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.UnpauseActivityByIdResponse> UnpauseActivityById(global::Temporalio.Api.WorkflowService.V1.UnpauseActivityByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ResetActivityById unpauses the execution of an activity specified by its ID.
      /// Returns a `NotFound` error if there is no pending activity with the provided ID.
      /// Resetting an activity means:
      /// * number of attempts will be reset to 0.
      /// * activity timeouts will be resetted.
      /// If the activity currently running:
      /// *  if 'no_wait' flag is provided, a new instance of the activity will be scheduled immediately.
      /// *  if 'no_wait' flag is not provided, a new instance of the  activity will be scheduled after current instance completes if needed.
      /// If 'reset_heartbeats' flag is set, the activity heartbeat timer and heartbeats will be reset.
      /// (-- api-linter: core::0136::prepositions=disabled
      ///     aip.dev/not-precedent: "By" is used to indicate request type. --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Temporalio.Api.WorkflowService.V1.ResetActivityByIdResponse> ResetActivityById(global::Temporalio.Api.WorkflowService.V1.ResetActivityByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(WorkflowServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_RegisterNamespace, serviceImpl.RegisterNamespace)
          .AddMethod(__Method_DescribeNamespace, serviceImpl.DescribeNamespace)
          .AddMethod(__Method_ListNamespaces, serviceImpl.ListNamespaces)
          .AddMethod(__Method_UpdateNamespace, serviceImpl.UpdateNamespace)
          .AddMethod(__Method_DeprecateNamespace, serviceImpl.DeprecateNamespace)
          .AddMethod(__Method_StartWorkflowExecution, serviceImpl.StartWorkflowExecution)
          .AddMethod(__Method_ExecuteMultiOperation, serviceImpl.ExecuteMultiOperation)
          .AddMethod(__Method_GetWorkflowExecutionHistory, serviceImpl.GetWorkflowExecutionHistory)
          .AddMethod(__Method_GetWorkflowExecutionHistoryReverse, serviceImpl.GetWorkflowExecutionHistoryReverse)
          .AddMethod(__Method_PollWorkflowTaskQueue, serviceImpl.PollWorkflowTaskQueue)
          .AddMethod(__Method_RespondWorkflowTaskCompleted, serviceImpl.RespondWorkflowTaskCompleted)
          .AddMethod(__Method_RespondWorkflowTaskFailed, serviceImpl.RespondWorkflowTaskFailed)
          .AddMethod(__Method_PollActivityTaskQueue, serviceImpl.PollActivityTaskQueue)
          .AddMethod(__Method_RecordActivityTaskHeartbeat, serviceImpl.RecordActivityTaskHeartbeat)
          .AddMethod(__Method_RecordActivityTaskHeartbeatById, serviceImpl.RecordActivityTaskHeartbeatById)
          .AddMethod(__Method_RespondActivityTaskCompleted, serviceImpl.RespondActivityTaskCompleted)
          .AddMethod(__Method_RespondActivityTaskCompletedById, serviceImpl.RespondActivityTaskCompletedById)
          .AddMethod(__Method_RespondActivityTaskFailed, serviceImpl.RespondActivityTaskFailed)
          .AddMethod(__Method_RespondActivityTaskFailedById, serviceImpl.RespondActivityTaskFailedById)
          .AddMethod(__Method_RespondActivityTaskCanceled, serviceImpl.RespondActivityTaskCanceled)
          .AddMethod(__Method_RespondActivityTaskCanceledById, serviceImpl.RespondActivityTaskCanceledById)
          .AddMethod(__Method_RequestCancelWorkflowExecution, serviceImpl.RequestCancelWorkflowExecution)
          .AddMethod(__Method_SignalWorkflowExecution, serviceImpl.SignalWorkflowExecution)
          .AddMethod(__Method_SignalWithStartWorkflowExecution, serviceImpl.SignalWithStartWorkflowExecution)
          .AddMethod(__Method_ResetWorkflowExecution, serviceImpl.ResetWorkflowExecution)
          .AddMethod(__Method_TerminateWorkflowExecution, serviceImpl.TerminateWorkflowExecution)
          .AddMethod(__Method_DeleteWorkflowExecution, serviceImpl.DeleteWorkflowExecution)
          .AddMethod(__Method_ListOpenWorkflowExecutions, serviceImpl.ListOpenWorkflowExecutions)
          .AddMethod(__Method_ListClosedWorkflowExecutions, serviceImpl.ListClosedWorkflowExecutions)
          .AddMethod(__Method_ListWorkflowExecutions, serviceImpl.ListWorkflowExecutions)
          .AddMethod(__Method_ListArchivedWorkflowExecutions, serviceImpl.ListArchivedWorkflowExecutions)
          .AddMethod(__Method_ScanWorkflowExecutions, serviceImpl.ScanWorkflowExecutions)
          .AddMethod(__Method_CountWorkflowExecutions, serviceImpl.CountWorkflowExecutions)
          .AddMethod(__Method_GetSearchAttributes, serviceImpl.GetSearchAttributes)
          .AddMethod(__Method_RespondQueryTaskCompleted, serviceImpl.RespondQueryTaskCompleted)
          .AddMethod(__Method_ResetStickyTaskQueue, serviceImpl.ResetStickyTaskQueue)
          .AddMethod(__Method_ShutdownWorker, serviceImpl.ShutdownWorker)
          .AddMethod(__Method_QueryWorkflow, serviceImpl.QueryWorkflow)
          .AddMethod(__Method_DescribeWorkflowExecution, serviceImpl.DescribeWorkflowExecution)
          .AddMethod(__Method_DescribeTaskQueue, serviceImpl.DescribeTaskQueue)
          .AddMethod(__Method_GetClusterInfo, serviceImpl.GetClusterInfo)
          .AddMethod(__Method_GetSystemInfo, serviceImpl.GetSystemInfo)
          .AddMethod(__Method_ListTaskQueuePartitions, serviceImpl.ListTaskQueuePartitions)
          .AddMethod(__Method_CreateSchedule, serviceImpl.CreateSchedule)
          .AddMethod(__Method_DescribeSchedule, serviceImpl.DescribeSchedule)
          .AddMethod(__Method_UpdateSchedule, serviceImpl.UpdateSchedule)
          .AddMethod(__Method_PatchSchedule, serviceImpl.PatchSchedule)
          .AddMethod(__Method_ListScheduleMatchingTimes, serviceImpl.ListScheduleMatchingTimes)
          .AddMethod(__Method_DeleteSchedule, serviceImpl.DeleteSchedule)
          .AddMethod(__Method_ListSchedules, serviceImpl.ListSchedules)
          .AddMethod(__Method_UpdateWorkerBuildIdCompatibility, serviceImpl.UpdateWorkerBuildIdCompatibility)
          .AddMethod(__Method_GetWorkerBuildIdCompatibility, serviceImpl.GetWorkerBuildIdCompatibility)
          .AddMethod(__Method_UpdateWorkerVersioningRules, serviceImpl.UpdateWorkerVersioningRules)
          .AddMethod(__Method_GetWorkerVersioningRules, serviceImpl.GetWorkerVersioningRules)
          .AddMethod(__Method_GetWorkerTaskReachability, serviceImpl.GetWorkerTaskReachability)
          .AddMethod(__Method_DescribeDeployment, serviceImpl.DescribeDeployment)
          .AddMethod(__Method_ListDeployments, serviceImpl.ListDeployments)
          .AddMethod(__Method_GetDeploymentReachability, serviceImpl.GetDeploymentReachability)
          .AddMethod(__Method_GetCurrentDeployment, serviceImpl.GetCurrentDeployment)
          .AddMethod(__Method_SetCurrentDeployment, serviceImpl.SetCurrentDeployment)
          .AddMethod(__Method_UpdateWorkflowExecution, serviceImpl.UpdateWorkflowExecution)
          .AddMethod(__Method_PollWorkflowExecutionUpdate, serviceImpl.PollWorkflowExecutionUpdate)
          .AddMethod(__Method_StartBatchOperation, serviceImpl.StartBatchOperation)
          .AddMethod(__Method_StopBatchOperation, serviceImpl.StopBatchOperation)
          .AddMethod(__Method_DescribeBatchOperation, serviceImpl.DescribeBatchOperation)
          .AddMethod(__Method_ListBatchOperations, serviceImpl.ListBatchOperations)
          .AddMethod(__Method_PollNexusTaskQueue, serviceImpl.PollNexusTaskQueue)
          .AddMethod(__Method_RespondNexusTaskCompleted, serviceImpl.RespondNexusTaskCompleted)
          .AddMethod(__Method_RespondNexusTaskFailed, serviceImpl.RespondNexusTaskFailed)
          .AddMethod(__Method_UpdateActivityOptionsById, serviceImpl.UpdateActivityOptionsById)
          .AddMethod(__Method_UpdateWorkflowExecutionOptions, serviceImpl.UpdateWorkflowExecutionOptions)
          .AddMethod(__Method_PauseActivityById, serviceImpl.PauseActivityById)
          .AddMethod(__Method_UnpauseActivityById, serviceImpl.UnpauseActivityById)
          .AddMethod(__Method_ResetActivityById, serviceImpl.ResetActivityById).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, WorkflowServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_RegisterNamespace, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RegisterNamespaceRequest, global::Temporalio.Api.WorkflowService.V1.RegisterNamespaceResponse>(serviceImpl.RegisterNamespace));
      serviceBinder.AddMethod(__Method_DescribeNamespace, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.DescribeNamespaceRequest, global::Temporalio.Api.WorkflowService.V1.DescribeNamespaceResponse>(serviceImpl.DescribeNamespace));
      serviceBinder.AddMethod(__Method_ListNamespaces, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ListNamespacesRequest, global::Temporalio.Api.WorkflowService.V1.ListNamespacesResponse>(serviceImpl.ListNamespaces));
      serviceBinder.AddMethod(__Method_UpdateNamespace, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.UpdateNamespaceRequest, global::Temporalio.Api.WorkflowService.V1.UpdateNamespaceResponse>(serviceImpl.UpdateNamespace));
      serviceBinder.AddMethod(__Method_DeprecateNamespace, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.DeprecateNamespaceRequest, global::Temporalio.Api.WorkflowService.V1.DeprecateNamespaceResponse>(serviceImpl.DeprecateNamespace));
      serviceBinder.AddMethod(__Method_StartWorkflowExecution, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.StartWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.StartWorkflowExecutionResponse>(serviceImpl.StartWorkflowExecution));
      serviceBinder.AddMethod(__Method_ExecuteMultiOperation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ExecuteMultiOperationRequest, global::Temporalio.Api.WorkflowService.V1.ExecuteMultiOperationResponse>(serviceImpl.ExecuteMultiOperation));
      serviceBinder.AddMethod(__Method_GetWorkflowExecutionHistory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryResponse>(serviceImpl.GetWorkflowExecutionHistory));
      serviceBinder.AddMethod(__Method_GetWorkflowExecutionHistoryReverse, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryReverseRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkflowExecutionHistoryReverseResponse>(serviceImpl.GetWorkflowExecutionHistoryReverse));
      serviceBinder.AddMethod(__Method_PollWorkflowTaskQueue, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.PollWorkflowTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.PollWorkflowTaskQueueResponse>(serviceImpl.PollWorkflowTaskQueue));
      serviceBinder.AddMethod(__Method_RespondWorkflowTaskCompleted, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskCompletedRequest, global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskCompletedResponse>(serviceImpl.RespondWorkflowTaskCompleted));
      serviceBinder.AddMethod(__Method_RespondWorkflowTaskFailed, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskFailedRequest, global::Temporalio.Api.WorkflowService.V1.RespondWorkflowTaskFailedResponse>(serviceImpl.RespondWorkflowTaskFailed));
      serviceBinder.AddMethod(__Method_PollActivityTaskQueue, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.PollActivityTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.PollActivityTaskQueueResponse>(serviceImpl.PollActivityTaskQueue));
      serviceBinder.AddMethod(__Method_RecordActivityTaskHeartbeat, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatRequest, global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatResponse>(serviceImpl.RecordActivityTaskHeartbeat));
      serviceBinder.AddMethod(__Method_RecordActivityTaskHeartbeatById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatByIdRequest, global::Temporalio.Api.WorkflowService.V1.RecordActivityTaskHeartbeatByIdResponse>(serviceImpl.RecordActivityTaskHeartbeatById));
      serviceBinder.AddMethod(__Method_RespondActivityTaskCompleted, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedResponse>(serviceImpl.RespondActivityTaskCompleted));
      serviceBinder.AddMethod(__Method_RespondActivityTaskCompletedById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedByIdRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCompletedByIdResponse>(serviceImpl.RespondActivityTaskCompletedById));
      serviceBinder.AddMethod(__Method_RespondActivityTaskFailed, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedResponse>(serviceImpl.RespondActivityTaskFailed));
      serviceBinder.AddMethod(__Method_RespondActivityTaskFailedById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedByIdRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskFailedByIdResponse>(serviceImpl.RespondActivityTaskFailedById));
      serviceBinder.AddMethod(__Method_RespondActivityTaskCanceled, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledResponse>(serviceImpl.RespondActivityTaskCanceled));
      serviceBinder.AddMethod(__Method_RespondActivityTaskCanceledById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledByIdRequest, global::Temporalio.Api.WorkflowService.V1.RespondActivityTaskCanceledByIdResponse>(serviceImpl.RespondActivityTaskCanceledById));
      serviceBinder.AddMethod(__Method_RequestCancelWorkflowExecution, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RequestCancelWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.RequestCancelWorkflowExecutionResponse>(serviceImpl.RequestCancelWorkflowExecution));
      serviceBinder.AddMethod(__Method_SignalWorkflowExecution, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.SignalWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.SignalWorkflowExecutionResponse>(serviceImpl.SignalWorkflowExecution));
      serviceBinder.AddMethod(__Method_SignalWithStartWorkflowExecution, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.SignalWithStartWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.SignalWithStartWorkflowExecutionResponse>(serviceImpl.SignalWithStartWorkflowExecution));
      serviceBinder.AddMethod(__Method_ResetWorkflowExecution, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ResetWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.ResetWorkflowExecutionResponse>(serviceImpl.ResetWorkflowExecution));
      serviceBinder.AddMethod(__Method_TerminateWorkflowExecution, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.TerminateWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.TerminateWorkflowExecutionResponse>(serviceImpl.TerminateWorkflowExecution));
      serviceBinder.AddMethod(__Method_DeleteWorkflowExecution, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.DeleteWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.DeleteWorkflowExecutionResponse>(serviceImpl.DeleteWorkflowExecution));
      serviceBinder.AddMethod(__Method_ListOpenWorkflowExecutions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ListOpenWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ListOpenWorkflowExecutionsResponse>(serviceImpl.ListOpenWorkflowExecutions));
      serviceBinder.AddMethod(__Method_ListClosedWorkflowExecutions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ListClosedWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ListClosedWorkflowExecutionsResponse>(serviceImpl.ListClosedWorkflowExecutions));
      serviceBinder.AddMethod(__Method_ListWorkflowExecutions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ListWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ListWorkflowExecutionsResponse>(serviceImpl.ListWorkflowExecutions));
      serviceBinder.AddMethod(__Method_ListArchivedWorkflowExecutions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ListArchivedWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ListArchivedWorkflowExecutionsResponse>(serviceImpl.ListArchivedWorkflowExecutions));
      serviceBinder.AddMethod(__Method_ScanWorkflowExecutions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ScanWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.ScanWorkflowExecutionsResponse>(serviceImpl.ScanWorkflowExecutions));
      serviceBinder.AddMethod(__Method_CountWorkflowExecutions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.CountWorkflowExecutionsRequest, global::Temporalio.Api.WorkflowService.V1.CountWorkflowExecutionsResponse>(serviceImpl.CountWorkflowExecutions));
      serviceBinder.AddMethod(__Method_GetSearchAttributes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.GetSearchAttributesRequest, global::Temporalio.Api.WorkflowService.V1.GetSearchAttributesResponse>(serviceImpl.GetSearchAttributes));
      serviceBinder.AddMethod(__Method_RespondQueryTaskCompleted, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RespondQueryTaskCompletedRequest, global::Temporalio.Api.WorkflowService.V1.RespondQueryTaskCompletedResponse>(serviceImpl.RespondQueryTaskCompleted));
      serviceBinder.AddMethod(__Method_ResetStickyTaskQueue, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ResetStickyTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.ResetStickyTaskQueueResponse>(serviceImpl.ResetStickyTaskQueue));
      serviceBinder.AddMethod(__Method_ShutdownWorker, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ShutdownWorkerRequest, global::Temporalio.Api.WorkflowService.V1.ShutdownWorkerResponse>(serviceImpl.ShutdownWorker));
      serviceBinder.AddMethod(__Method_QueryWorkflow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.QueryWorkflowRequest, global::Temporalio.Api.WorkflowService.V1.QueryWorkflowResponse>(serviceImpl.QueryWorkflow));
      serviceBinder.AddMethod(__Method_DescribeWorkflowExecution, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.DescribeWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.DescribeWorkflowExecutionResponse>(serviceImpl.DescribeWorkflowExecution));
      serviceBinder.AddMethod(__Method_DescribeTaskQueue, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.DescribeTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.DescribeTaskQueueResponse>(serviceImpl.DescribeTaskQueue));
      serviceBinder.AddMethod(__Method_GetClusterInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.GetClusterInfoRequest, global::Temporalio.Api.WorkflowService.V1.GetClusterInfoResponse>(serviceImpl.GetClusterInfo));
      serviceBinder.AddMethod(__Method_GetSystemInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.GetSystemInfoRequest, global::Temporalio.Api.WorkflowService.V1.GetSystemInfoResponse>(serviceImpl.GetSystemInfo));
      serviceBinder.AddMethod(__Method_ListTaskQueuePartitions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ListTaskQueuePartitionsRequest, global::Temporalio.Api.WorkflowService.V1.ListTaskQueuePartitionsResponse>(serviceImpl.ListTaskQueuePartitions));
      serviceBinder.AddMethod(__Method_CreateSchedule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.CreateScheduleRequest, global::Temporalio.Api.WorkflowService.V1.CreateScheduleResponse>(serviceImpl.CreateSchedule));
      serviceBinder.AddMethod(__Method_DescribeSchedule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.DescribeScheduleRequest, global::Temporalio.Api.WorkflowService.V1.DescribeScheduleResponse>(serviceImpl.DescribeSchedule));
      serviceBinder.AddMethod(__Method_UpdateSchedule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.UpdateScheduleRequest, global::Temporalio.Api.WorkflowService.V1.UpdateScheduleResponse>(serviceImpl.UpdateSchedule));
      serviceBinder.AddMethod(__Method_PatchSchedule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.PatchScheduleRequest, global::Temporalio.Api.WorkflowService.V1.PatchScheduleResponse>(serviceImpl.PatchSchedule));
      serviceBinder.AddMethod(__Method_ListScheduleMatchingTimes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ListScheduleMatchingTimesRequest, global::Temporalio.Api.WorkflowService.V1.ListScheduleMatchingTimesResponse>(serviceImpl.ListScheduleMatchingTimes));
      serviceBinder.AddMethod(__Method_DeleteSchedule, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.DeleteScheduleRequest, global::Temporalio.Api.WorkflowService.V1.DeleteScheduleResponse>(serviceImpl.DeleteSchedule));
      serviceBinder.AddMethod(__Method_ListSchedules, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ListSchedulesRequest, global::Temporalio.Api.WorkflowService.V1.ListSchedulesResponse>(serviceImpl.ListSchedules));
      serviceBinder.AddMethod(__Method_UpdateWorkerBuildIdCompatibility, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.UpdateWorkerBuildIdCompatibilityRequest, global::Temporalio.Api.WorkflowService.V1.UpdateWorkerBuildIdCompatibilityResponse>(serviceImpl.UpdateWorkerBuildIdCompatibility));
      serviceBinder.AddMethod(__Method_GetWorkerBuildIdCompatibility, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.GetWorkerBuildIdCompatibilityRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkerBuildIdCompatibilityResponse>(serviceImpl.GetWorkerBuildIdCompatibility));
      serviceBinder.AddMethod(__Method_UpdateWorkerVersioningRules, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.UpdateWorkerVersioningRulesRequest, global::Temporalio.Api.WorkflowService.V1.UpdateWorkerVersioningRulesResponse>(serviceImpl.UpdateWorkerVersioningRules));
      serviceBinder.AddMethod(__Method_GetWorkerVersioningRules, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.GetWorkerVersioningRulesRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkerVersioningRulesResponse>(serviceImpl.GetWorkerVersioningRules));
      serviceBinder.AddMethod(__Method_GetWorkerTaskReachability, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.GetWorkerTaskReachabilityRequest, global::Temporalio.Api.WorkflowService.V1.GetWorkerTaskReachabilityResponse>(serviceImpl.GetWorkerTaskReachability));
      serviceBinder.AddMethod(__Method_DescribeDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.DescribeDeploymentRequest, global::Temporalio.Api.WorkflowService.V1.DescribeDeploymentResponse>(serviceImpl.DescribeDeployment));
      serviceBinder.AddMethod(__Method_ListDeployments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ListDeploymentsRequest, global::Temporalio.Api.WorkflowService.V1.ListDeploymentsResponse>(serviceImpl.ListDeployments));
      serviceBinder.AddMethod(__Method_GetDeploymentReachability, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.GetDeploymentReachabilityRequest, global::Temporalio.Api.WorkflowService.V1.GetDeploymentReachabilityResponse>(serviceImpl.GetDeploymentReachability));
      serviceBinder.AddMethod(__Method_GetCurrentDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.GetCurrentDeploymentRequest, global::Temporalio.Api.WorkflowService.V1.GetCurrentDeploymentResponse>(serviceImpl.GetCurrentDeployment));
      serviceBinder.AddMethod(__Method_SetCurrentDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.SetCurrentDeploymentRequest, global::Temporalio.Api.WorkflowService.V1.SetCurrentDeploymentResponse>(serviceImpl.SetCurrentDeployment));
      serviceBinder.AddMethod(__Method_UpdateWorkflowExecution, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionRequest, global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionResponse>(serviceImpl.UpdateWorkflowExecution));
      serviceBinder.AddMethod(__Method_PollWorkflowExecutionUpdate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.PollWorkflowExecutionUpdateRequest, global::Temporalio.Api.WorkflowService.V1.PollWorkflowExecutionUpdateResponse>(serviceImpl.PollWorkflowExecutionUpdate));
      serviceBinder.AddMethod(__Method_StartBatchOperation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.StartBatchOperationRequest, global::Temporalio.Api.WorkflowService.V1.StartBatchOperationResponse>(serviceImpl.StartBatchOperation));
      serviceBinder.AddMethod(__Method_StopBatchOperation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.StopBatchOperationRequest, global::Temporalio.Api.WorkflowService.V1.StopBatchOperationResponse>(serviceImpl.StopBatchOperation));
      serviceBinder.AddMethod(__Method_DescribeBatchOperation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.DescribeBatchOperationRequest, global::Temporalio.Api.WorkflowService.V1.DescribeBatchOperationResponse>(serviceImpl.DescribeBatchOperation));
      serviceBinder.AddMethod(__Method_ListBatchOperations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ListBatchOperationsRequest, global::Temporalio.Api.WorkflowService.V1.ListBatchOperationsResponse>(serviceImpl.ListBatchOperations));
      serviceBinder.AddMethod(__Method_PollNexusTaskQueue, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.PollNexusTaskQueueRequest, global::Temporalio.Api.WorkflowService.V1.PollNexusTaskQueueResponse>(serviceImpl.PollNexusTaskQueue));
      serviceBinder.AddMethod(__Method_RespondNexusTaskCompleted, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskCompletedRequest, global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskCompletedResponse>(serviceImpl.RespondNexusTaskCompleted));
      serviceBinder.AddMethod(__Method_RespondNexusTaskFailed, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskFailedRequest, global::Temporalio.Api.WorkflowService.V1.RespondNexusTaskFailedResponse>(serviceImpl.RespondNexusTaskFailed));
      serviceBinder.AddMethod(__Method_UpdateActivityOptionsById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.UpdateActivityOptionsByIdRequest, global::Temporalio.Api.WorkflowService.V1.UpdateActivityOptionsByIdResponse>(serviceImpl.UpdateActivityOptionsById));
      serviceBinder.AddMethod(__Method_UpdateWorkflowExecutionOptions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionOptionsRequest, global::Temporalio.Api.WorkflowService.V1.UpdateWorkflowExecutionOptionsResponse>(serviceImpl.UpdateWorkflowExecutionOptions));
      serviceBinder.AddMethod(__Method_PauseActivityById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.PauseActivityByIdRequest, global::Temporalio.Api.WorkflowService.V1.PauseActivityByIdResponse>(serviceImpl.PauseActivityById));
      serviceBinder.AddMethod(__Method_UnpauseActivityById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.UnpauseActivityByIdRequest, global::Temporalio.Api.WorkflowService.V1.UnpauseActivityByIdResponse>(serviceImpl.UnpauseActivityById));
      serviceBinder.AddMethod(__Method_ResetActivityById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Temporalio.Api.WorkflowService.V1.ResetActivityByIdRequest, global::Temporalio.Api.WorkflowService.V1.ResetActivityByIdResponse>(serviceImpl.ResetActivityById));
    }

  }
}
#endregion